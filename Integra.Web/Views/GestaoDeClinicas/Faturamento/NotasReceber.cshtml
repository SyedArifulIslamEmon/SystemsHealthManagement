@model Integra.Web.Models.NotasReceberViewModel
@{
    ViewBag.Title = ": Painel de Controle Íntegra Medical : Faturamento :";
    Layout = "~/Views/Shared/_LayoutMaster.module.cshtml";
}

@Scripts.Render("~/dataTables")
@Scripts.Render("~/BlockUI")
@Styles.Render("~/BlockUIcss")

<style>
    .textoDeslisandoEsquerda
    {
        font-size: 1.5em!important;
    }
</style>

<div class="container-fluid" id="main-container" style="padding-top: 10px;">
    <div id="main-content" class="clearfix">
        <div id="page-content" class="clearfix">
            <div class="page-header position-relative">
                <h3>Gestão de Notas não Recebidas</h3>
            </div>
            <div class="row-fluid">
                <div class="row-fluid">
                    <div class="span12">
                        <div>
                            <div class="row-fluid">
                                <div class="form-horizontal">
                                    <table cellpadding="0" cellspacing="0" border="0">
                                        <tr>
                                            <td>
                                                <div class="control-group">
                                                    <label class="control-label">Mês</label>
                                                    <div class="controls">
                                                        <div class="row-fluid">
                                                            <select data-bind="options: model.Meses, value: Mes, optionsText: 'Descricao', optionsvalue: 'Codigo'"></select>
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="control-group">
                                                    <label class="control-label">Ano</label>
                                                    <div class="controls">
                                                        <div class="row-fluid">
                                                            <select data-bind="options: model.Anos, value: Ano"></select>
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="control-group">
                                                    <label class="control-label"></label>
                                                    <div class="controls">
                                                        <div class="row-fluid">
                                                            <button class="btn btn-default btn-sm" data-bind="click: ObterNotas">Consultar</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="span12">
                        <div>
                            <div class="row-fluid">
                                <table id="gridNotasReceber" data-bind="dataTable:{
    dataSource: NotasReceber,
    rowTemplate: 'gridNotasReceberTemplate',
    sPaginationType: 'bootstrap',
    iDisplayLength: 10,
    gridId: 'gridNotasReceber',
    autoWidth: false,
    sDom: 'fptr',
    columns:
	[
        { 'name': 'NomeDaClinica' },
		{ 'name': 'QtdInfusoes' },
		{ 'name': 'Valor' }
	],
    options: {
        oLanguage: {
            sUrl: '@Url.Content("~/Content/table-lang-br.txt")    '
    }
}
}"
                                       class="table table-striped table-bordered table-hover">
                                    <thead>
                                        <tr>
                                            <th>Clínica</th>
                                            <th>Qtd. Infusões</th>
                                            <th>Valor</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                                <div class="hr hr8 hr-double hr-dotted"></div>
                                <div class="row-fluid">
                                    <div id="tableFooter" class="span12 pull-right" style="padding-right: 20px;" data-bind="visible: NotasReceber().length > 0">
                                        <button data-bind="click: generate_excel" class="bbtnn bbtnn-gray"><i class="icon-file"></i>Exportar Excel</button>
                                        <h4 class="pull-right">
                                            Total de Clínicas: <span class="red" data-bind="text: QuantidadeDeClinicas"></span>|
                                            Total de Infusões: <span class="red" data-bind="text: QuantidadeDeInfusoes"></span>| 
                                            Valor Total: <span data-bind="money: ValorTotal" class="red"></span>
                                        </h4>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Html.Partial("_LayoutFooter")

<script id="gridNotasReceberTemplate" type="text/html">
    <td data-bind="text: NomeDaClinica"></td>
    <td data-bind="text: QtdInfusoes" style="text-align: center; width: 120px;"></td>
    <td data-bind="money: Valor" style="text-align: center; width: 120px;"></td>
</script>

<input id="Model" type="hidden" value="@Html.Raw(Json.Encode(Model))"/>
<script>

    function NotaFiscalViewModel(nota, parent) {
        var self = this;
        self.Parent = parent;
        self.Codigo = nota.CodigoDaClinica;
        self.QtdInfusoes = nota.QuantidadeDeInfusoes;
        self.Valor = nota.ValorDasInfusoes;
        self.NomeDaClinica = nota.NomeDaClinica;
    }
    
    function layout(indices) {
        if (indices>0) {
            $("#colTableGestao").show();
            $("#rowTableGestao").show();
        }else {
            $("#colTableGestao").hide();
            $("#rowTableGestao").hide();
        }
    }

    function GestaoViewModel() {
        var self = this;
        self.model =  jQuery.parseJSON($("#Model").val());
        self.Mes = ko.observable(ko.utils.arrayFirst(self.model.Meses, function(mes) { return mes.Codigo == @DateTime.Now.Month; }));
        self.Ano = ko.observable(ko.utils.arrayFirst(self.model.Anos, function(ano) { return ano == @DateTime.Now.Year; }));
        self.NotasReceber = ko.observableArray([]);

        layout(self.NotasReceber().length);

        self.PreencherTabela = function(notas) {
            self.NotasReceber(ko.utils.arrayMap(notas, function(nota) { return new NotaFiscalViewModel(nota, self); }));
            layout(self.NotasReceber().length);
        };

        self.ObterNotas = function() {
            self.NotasReceber.removeAll();
            $.get('@Url.Action("ObterNotasReceber")',{ ano: self.Ano, mes: self.Mes().Codigo }, self.PreencherTabela);
            layout(self.NotasReceber().length);
        };

        self.QuantidadeDeClinicas =  ko.computed(function() {
            return self.NotasReceber().length;
        });
        
        self.QuantidadeDeInfusoes = ko.computed(function() {
            var total = 0;
            ko.utils.arrayForEach(self.NotasReceber(), function(notas) {
                total += notas.QtdInfusoes;
            });
            return total;
        });

        self.ValorTotal = ko.computed(function() {
            var total = 0;
            ko.utils.arrayForEach(self.NotasReceber(), function(notas) {
                total += notas.Valor;
            });
            return total;
        });
        
        //Gerar Excel Clinicas.
        self.generate_excel = function () {
            export_excel("gridNotasReceber");
        };
    }

    $(document).ready(function() {
        var validationOptions = { insertMessages: false, decorateElement: true, messagesOnModified: false };
        var view = new GestaoViewModel();
        ko.applyBindingsWithValidation(ko.validatedObservable(view),$("#main-container").get(0),validationOptions);
        
        $(".ui-dialog-titlebar").hide();
        $(".ui-dialog-buttonpane").hide();
    });
    
    function export_excel(tableid) {
        var html = '';
        var oTable = $('#'+tableid).dataTable().fnGetData();
       
        html+="<html><table>";
        html+="<tr>";
        $('#'+tableid+' thead th').each(function() {
            if(this.textContent != ''){
                html += "<th style='text-align:left;vertical-align:middle;width:100%'>" + this.textContent + "</th>";
            }
        });
        html+="</tr>";
        for (var count = 0; count <= oTable.length - 1; count++) {
            html+="<tr>";
            html+="<td style='text-align:left;vertical-align:middle;width:100%'>"+oTable[count].NomeDaClinica.toString()+"</td>";
            html+="<td style='text-align:left;vertical-align:middle;width:100%'>"+oTable[count].QtdInfusoes.toString()+"</td>";
            html+="<td style='text-align:left;vertical-align:middle;width:100%'>"+oTable[count].Valor.toString()+"</td>";

            html+="</tr>";
        }
        html+="</table></html>";

        window.open('data:application/vnd.ms-excel;base64,' + base64_encode(html));
    }
	
    function base64_encode (data) {
        var b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        var o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, enc = "", tmp_arr = [];

        if (!data) {
            return data;
        }

        do {
            o1 = data.charCodeAt(i++);
            o2 = data.charCodeAt(i++);
            o3 = data.charCodeAt(i++);
            bits = o1 << 16 | o2 << 8 | o3;
            h1 = bits >> 18 & 0x3f;
            h2 = bits >> 12 & 0x3f;
            h3 = bits >> 6 & 0x3f;
            h4 = bits & 0x3f;
            tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);
        } while (i < data.length);
        enc = tmp_arr.join('');
        var r = data.length % 3;
        return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);
    }
</script>
