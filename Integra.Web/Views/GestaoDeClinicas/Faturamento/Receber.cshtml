@model List<Integra.Web.Models.ClinicaViewModel>
@{
    ViewBag.Title = ": Painel de Controle Íntegra Medical : Faturamento :";
    Layout = "~/Views/Shared/_LayoutMaster.module.cshtml";
}

@Scripts.Render("~/dataTables")

<div class="container-fluid" id="main-container" style="padding-top: 10px;">
    <div id="main-content" class="clearfix">
        <div id="page-content" class="clearfix">
            <div class="page-header position-relative">
                <h3>Receber Nota Fiscal <small></small></h3>
            </div>
            <div class="row-fluid">
                <div class="row-fluid">
                    <div class="span12">
                        <div>
                            <div class="row-fluid">
                                <div class="form-horizontal">
                                    <div class="control-group">
                                        <label class="control-label">Clínica</label>
                                        <div class="controls">
                                            <div class="row-fluid">
                                                <select data-bind="options: Clinicas, value: Clinica, optionsText: 'Nome', optionsvalue: 'Codigo', optionsCaption: 'Selecione...'"></select>
                                                <span class="error-inline" data-bind="validationMessage: Clinica"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-horizontal">
                                        <div class="control-group">
                                            <label class="control-label">Quantidade de Infusões</label>
                                            <div class="controls">
                                                <div class="row-fluid">
                                                    <input type="text" data-bind="maskMoney: QuantidadeDeInfusoes, maskOptions: { prefixo: '', precisao: 0 }" />
                                                    <span class="error-inline" data-bind="validationMessage: QuantidadeDeInfusoes"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="row-fluid">
                                <div class="form-horizontal">
                                    <table cellpadding="0" cellspacing="0" border="0">
                                        <tr>
                                            <td>
                                                <div class="control-group">
                                                    <label class="control-label">Número NF</label>
                                                    <div class="controls">
                                                        <div class="row-fluid">
                                                            <input type="text" data-bind="value: Numero" />
                                                            <span class="error-inline" data-bind="validationMessage: Numero"></span>

                                                        </div>
                                                        <span class="error-inline"></span>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="control-group">
                                                    <label class="control-label">Valor NF</label>
                                                    <div class="controls">
                                                        <div class="row-fluid">
                                                            <input type="text" data-bind="maskMoney: Valor" />
                                                            <span class="error-inline" data-bind="validationMessage: Valor"></span>

                                                        </div>
                                                        <span class="error-inline"></span>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <div class="control-group">
                                                    <label class="control-label">Data Referência</label>
                                                    <div class="controls">
                                                        <div class="row-fluid">
                                                            <input type="text" data-bind="datepicker1: Data, datepickerOptions: { showOn: 'button', buttonImage: '@Url.Content("~/Content/images/ico-calendar.png")    ', buttonImageOnly: true }"  />
                                                            <span class="error-inline" data-bind="validationMessage: Data"></span>

                                                        </div>
                                                        <span class="error-inline"></span>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="control-group">
                                                    <label class="control-label">Data Recebimento</label>
                                                    <div class="controls">
                                                        <div class="row-fluid">
                                                            <input type="text" data-bind="    datepicker1: DataRecebimento, datepickerOptions: { showOn: 'button', buttonImage: '@Url.Content("~/Content/images/ico-calendar.png")    ', buttonImageOnly: true }"/>
                                                            <span class="error-inline" data-bind="validationMessage: DataRecebimento"></span>
                                                        </div>
                                                        <span class="error-inline"></span>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td colspan="2">
                                                <div class="control-group">
                                                    <label class="control-label">Arquivo NF</label>
                                                    <div class="controls">
                                                        <div class="row-fluid">
                                                            <input type="file" data-bind="file:Arquivo" />
                                                            <span class="error-inline" data-bind="validationMessage: Arquivo"></span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="span12">
                        <div>
                            <div class="row-fluid">
                                <table id="gridFaturamento" data-bind="dataTable:{
    dataSource: Faturamento,
    rowTemplate: 'gridFaturamentoTemplate',
    sPaginationType: 'bootstrap',
    iDisplayLength: 10,
    gridId: 'gridFaturamento',
    autoWidth: false,
    sDom: 'fptr',
    columns:
	[
		{ 'name': 'DataDaInfusao' },
		{ 'name': 'Localizador' },
		{ 'name': 'Valor' }
	],
    options: {
        oLanguage: {
            sUrl: '@Url.Content("~/Content/table-lang-br.txt")    '
    }
}
}"
									   class="table table-striped table-bordered table-hover">
                                    <thead>
                                        <tr>
                                            <th>Data da Infusão</th>
                                            <th>Localizador</th>
                                            <th>Valor</th>
                                            <th id="tableColPagar">Pagar</th>
                                            <th id="tableColGlosar">Glosar</th>
                                            <th id="tableColMulta">Multa</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                                <div class="hr hr8 hr-double hr-dotted"></div>
                                <div class="row-fluid">
                                    <div id="tableFooter" class="span12 pull-right" style="padding-right: 20px;">
                                        <h4 class="pull-right">Infusões Disponíveis: <span class="red" data-bind="text: TotalHaSelecionar"></span>| 
											Infusões Selecionadas: <span data-bind="text: TotalSelecionado" class="red"></span>| 
											Pagar: <span data-bind="    money: TotalPagar" class="red"></span>| 
											Glosar: <span data-bind="    money: TotalGlosar" class="red"></span>
                                        </h4>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="span12">
                        <div class="form-actions">
                            <button class="bbtnn bbtnn-grey" style="float:right" data-bind="click: selTodos, visible: Faturamento().length > 0"><i class="icon-ok icon-white"></i>Selecionar Todos</button>
                            <button class="bbtnn bbtnn-grey" data-bind="click: Limpar"><i class="icon-ok icon-white"></i>Limpar</button>
                            <button class="bbtnn bbtnn-danger" data-bind="click: Devolver"><i class="icon-ok icon-white"></i>Devolver NF</button>
                            <button class="bbtnn bbtnn-info" data-bind="click: Salvar, enable: ValorIguais" id="btnConfirmarReceber"><i class="icon-ok icon-white"></i>Confirmar</button>
                            <img id="imgConfirmarload" style="display:none;" src="~/Content/images/ajaxloader.gif" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- 
		Dialog: Devolver NF 
		-->

    <div style="display: none;" data-bind="dialog: { isOpen: DevolverDialog, modal: true, title: '', width: '0px', height: '0px'}">
        <div class="modal">
            <div class="modal-header">
                <h4>Devolução de Nota Fiscal</h4>
            </div>
            <div class="modal-body">
                <div class="row-fluid">
                    <div class="form-horizontal" data-bind="validationOptions: { insertMessages: false, decorateElement: true, messagesOnModified: false }">
                        <div class="control-group">
                            <label class="control-label">Forma da Devolução</label>
                            <div class="controls">
                                <div class="row-fluid">
                                    <select data-bind="options: FormasDevolucao, value: FormaDevolucao, optionsCaption: 'Selecione...'"></select>
                                </div>
                                <span class="error-inline" data-bind="validationMessage: FormaDevolucao"></span>
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label">Motivo da Devolução</label>
                            <div class="controls">
                                <div class="row-fluid">
                                    <textarea data-bind="value: Motivo"></textarea>
                                </div>
                                <span class="error-inline" data-bind="validationMessage: Motivo"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button data-bind="click: CancelarDevolucao" class="bbtnn bbtnn-gray" value="Cancelar">Cancelar</button>
                <button data-bind="click: DevolverNF" class="bbtnn bbtnn-success" value="Devolver"><i class="icon-ok"></i>Devolver</button>
            </div>
        </div>
    </div>
</div>
@Html.Partial("_LayoutFooter")

<script id="gridFaturamentoTemplate" type="text/html">
    <td data-bind="dateExtension: DataDaInfusao" style="text-align: center; width: 160px;"></td>
    <td data-bind="text: Localizador"></td>
    <td data-bind="money: Valor" style="text-align: center; width: 100px;"></td>
    <td id="tableRowPagar" style="text-align: center; width: 40px;">
        <input type="radio" data-bind="attr:{ name: Codigo+'pagarglosar' },event : { dblclick: double }, checked: Acao" style="text-align: center; width: 10px;" value="Pagar" /></td>
    <td id="tableRowGlosar" style="text-align: center; width: 40px;">
        <input type="radio" data-bind="attr:{ name: Codigo+'pagarglosar' },event : { dblclick: double }, checked: Acao" style="text-align: center; width: 10px;" value="Glosar" /></td>
    <td id="tableRowMulta" style="text-align: center; width: 40px;">
        <input type="checkbox" data-bind="visible: Multa>0 , checked: MultaInfusao" style="text-align: center; width: 10px;" />
        <span style="visibility: hidden; font-size: 0px;" data-bind="money: Multa"></span>
    </td>
</script>

<script type="text/javascript">
    $(document).ready(function() {
        var validationOptions = { insertMessages: false, decorateElement: true, messagesOnModified: false };
        var view = new FaturamentoView();
        ko.applyBindingsWithValidation(ko.validatedObservable(view),$("#main-container").get(0),validationOptions);
		
        $(".ui-dialog-titlebar").hide();
        $(".ui-dialog-buttonpane").hide();
    });
	
    function InfusaoView(infusao, parent) {
        var self = this;
        self.Codigo = infusao.Codigo;
        self.parent = parent;
        self.DataDaInfusao = infusao.DataInfusao;
        self.Localizador = infusao.Localizador;
        self.Valor = infusao.Valor;
        self.Multa = infusao.Multa;
        //self.MultaInfusao = ko.observable(self.Multa > 0);
        self.MultaInfusao = ko.observable(false);
        self.Acao = ko.observable();
        self.double = function() {
            self.Acao(null);
        };
        
    };
	
    function layout(indices) {
        if (indices>0) {
            $("#tableColPagar").show();
            $("#tableRowPagar").show();
            $("#tableColGlosar").show();
            $("#tableRowGlosar").show();
            $("#tableColMulta").show();
            $("#tableRowMulta").show();
            $("#tableFooter").show();
        }else {
            $("#tableColPagar").hide();
            $("#tableRowPagar").hide();
            $("#tableColGlosar").hide();
            $("#tableRowGlosar").hide();
            $("#tableColMulta").hide();
            $("#tableRowMulta").hide();
            $("#tableFooter").hide();
        }
    }

    function FaturamentoView() {
        var self = this;
        self.Faturamento = ko.observableArray([]);
        self.Valor = ko.observable().extend({ required: true, min: 0.01 });
        self.DataRecebimento = ko.observable().extend({ required: true });
        self.Data = ko.observable().extend({ required: true });
        self.Numero = ko.observable().extend({ required: true });
        self.Clinica = ko.observable().extend({ required: true });
        self.Arquivo = ko.observable().extend({ required: true });
        self.FormasDevolucao = ko.observableArray(["Email","Correio"]);
        self.FormaDevolucao = ko.observable();
        self.Motivo = ko.observable();
        self.Clinicas = ko.observableArray(@Html.Raw(Json.Encode(Model)));
        self.DevolverDialog = ko.observable(false);
        self.QuantidadeDeInfusoes = ko.observable().extend({ required: true, min: 1 });
        layout(self.Faturamento().length);

        self.Clinica.subscribe(function() {
            self.Faturamento.removeAll();
            if(self.Clinica()!= null) {               
                $.get('@Url.Action("ObterInfusoes")', { id: self.Clinica().Codigo }, function(infusoes) {
            var mappedData = jQuery.map(infusoes, function(item) { return new InfusaoView(item, self); });
            self.Faturamento(mappedData);
            layout(self.Faturamento().length);
        });
    }
        });	    
		
    self.TotalSelecionado = ko.computed(function() {
        return ko.utils.arrayFilter(self.Faturamento(), function(infusao) {
            return (infusao.Acao() == "Glosar" || infusao.Acao() == "Pagar");
        }).length;
    });

    self.selTodos = function() {
        ko.utils.arrayFilter(self.Faturamento(), function(infusao) {
            infusao.Acao("Pagar");
        });
    };

    self.TotalHaSelecionar = ko.computed(function() {
        return ko.utils.arrayFilter(self.Faturamento(), function(infusao) {
            return (infusao.Acao() != "Glosar" && infusao.Acao() != "Pagar");
        }).length;
    });

    self.TotalPagar = ko.computed(function() {
        var valor = 0;
        ko.utils.arrayForEach(self.Faturamento(), function(infusao) {
            if(infusao.Acao() == "Pagar") {
                valor += infusao.Valor;
                if (infusao.MultaInfusao())
                    valor -= infusao.Multa;
            }
        });
        return valor;
    });
		
    self.TotalGlosar = ko.computed(function() {
        var valor = 0;
        ko.utils.arrayForEach(self.Faturamento(), function(infusao) {
            if(infusao.Acao() == "Glosar") {
                valor += infusao.Valor;
                if(infusao.MultaInfusao())
                    valor -= infusao.Multa;
            }
        });
        return valor;
    });

    self.ValorIguais = ko.computed(function() {
        return (self.Valor() ==  (self.TotalGlosar() +self.TotalPagar())) && (self.QuantidadeDeInfusoes() == self.TotalSelecionado()) ;
    });

    self.ObterNota = function() {  
        var infusoes = ko.utils.arrayFilter(self.Faturamento(), function(infusao) {
            return (infusao.Acao() == "Glosar" || infusao.Acao() == "Pagar");
        });
			
        infusoes = ko.utils.arrayMap(infusoes, function(infusao) {
            return { Codigo: infusao.Codigo, Glosar: infusao.Acao() == "Glosar" };
        });

        return JSON.stringify({
            CodigoDaClinica: self.Clinica().Codigo,
            Valor: self.Valor(),
            Data: self.Data().toLocaleDateString(),
            DataRecebimento: self.DataRecebimento(),
            Numero: self.Numero(),
            Motivo: self.Motivo(),
            FormaDevolucao: self.FormaDevolucao(),
            infusoes: infusoes
        });
    };
		
    self.Limpar = function() {
        self.Valor(null);
        self.Data(null);
        self.DataRecebimento(null);
        self.Numero(null);
        self.Arquivo(null);
        self.Clinica(null);
        self.Motivo(null);
        self.FormaDevolucao(null);
        self.QuantidadeDeInfusoes(null);
        self.errors.showAllMessages(false);    
        layout(self.Faturamento().length);
    };
		
    self.Salvar = function() {
        if (self.isValid()) {
            $('#btnConfirmarReceber').hide();
            $('#imgConfirmarload').show();
            var formData = new window.FormData();
            formData.append('Arquivo', self.Arquivo());
            $.ajax({
                url: '@Url.Action("ReceberArquivo")',
                type: 'POST',
                data: formData,
                cache: false,
                async: false,
                contentType: false,
                processData: false
            });

            $.ajax({
                url: '@Url.Action("Receber")',
                type: 'POST',
                data: self.ObterNota(),
                dataType: 'json',
                contentType: 'application/json',
                success: function (resposta) {
                    if (resposta != null && resposta.Sucesso) {
                        $('#imgConfirmarload').hide();
                        $('#btnConfirmarReceber').show();
                        alert("Nota recebida com sucesso!");
                        self.Limpar();
                    } else {
                        $('#imgConfirmarload').hide();
                        $('#btnConfirmarReceber').show();
                        alert("Algum erro ocorreu durante o cadastro!");
                    }
                },
                error: function () {
                    $('#imgConfirmarload').hide();
                    $('#btnConfirmarReceber').show();
                    alert("ERRO --- Favor repetir a operação!!");
                }
            });
            
        } else {
            self.errors.showAllMessages(true);
            alert('Por favor, todos os campos referentes à Nota Fiscal devem ser preenchidos.');
        }
    };
		
    self.Devolver = function() {
        if (self.isValid()) {
            self.DevolverDialog(true);
        } else {
            alert('Por favor, todos os campos referentes à Nota Fiscal devem ser preenchidos, antes de efetuar a devolução da mesma.');
        }
    };
		
    self.CancelarDevolucao = function() {
        self.Motivo(null);
        self.FormaDevolucao(null);
        self.DevolverDialog(false);
    };
		
    self.DevolverNF = function() {
        if(self.Motivo()!= null) {
            var formData = new window.FormData();
            formData.append('Arquivo', self.Arquivo());
            $.ajax({
                url: '@Url.Action("ReceberArquivo")',
                type: 'POST',
                data: formData,
                cache: false,
                async: false,
                contentType: false,
                processData: false
            });

            $.ajax({
                url: '@Url.Action("DevolverNota")',
                    type: 'POST',
                    data: self.ObterNota(),
                    dataType: 'json',
                    contentType: 'application/json',
                    success: function (resposta) {
                        if (resposta.Sucesso) {
                            alert("Nota devolvida com sucesso!");
                            self.DevolverDialog(false);
                            self.Limpar();
                        } else {
                            alert("Algum erro ocorreu durante o cadastro!");
                        }
                    }
                });
            }
    };
    }
</script>
