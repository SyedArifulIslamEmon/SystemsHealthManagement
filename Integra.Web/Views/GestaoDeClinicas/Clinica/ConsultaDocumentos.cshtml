@model List<Integra.Web.Models.ConsultaDocumentosClinicaViewModel>
@{
    ViewBag.Title = ": Painel de Controle Íntegra Medical : Faturamento :";
    Layout = "~/Views/Shared/_LayoutMaster.module.cshtml";
}

@Scripts.Render("~/dataTables")
@Scripts.Render("~/BlockUI")
@Styles.Render("~/BlockUIcss")

<style>
    .textoDeslisandoEsquerda
    {
        font-size: 1.5em!important;
    }
</style>

<div class="container-fluid" id="main-container" style="padding-top: 10px;">
    <div id="main-content" class="clearfix">
        <div id="page-content" class="clearfix">
            <div class="page-header position-relative">
                <h3>Consulta de Documentos</h3>
            </div>
            <div class="row-fluid">
                <div class="row-fluid">

                    <div class="span12">
                        <div>
                            <div class="row-fluid" id="DivPageDocsClinicaViewModel" style="width: 99.9%!important; overflow: auto;">
                                <div style="width: 4000px">
                                    <table id="gridConsultaDocumento" data-bind="dataTable:{
    dataSource: ConsultaDocumento,
    rowTemplate: 'gridConsultaDocumentoTemplate',
    sPaginationType: 'bootstrap',
    iDisplayLength: 10,
    gridId: 'gridConsultaDocumento',
    autoWidth: false,
    sDom: 'fptr',
    columns:
    [
        { 'name': 'NomeDaClinica' },

        //{ 'name': 'NomeDoDocumento' },
        //{ 'name': 'DataValidade' }

        { 'name': 'ContratoIntegra' },
        { 'name': 'Alvara' },
        { 'name': 'ContratoSocial' },
        { 'name': 'VigilanciaSanitaria' },
        { 'name': 'RegimeInterno' },
        { 'name': 'DocRespClinica' },
        { 'name': 'DocRespTecnico' },
        { 'name': 'OutrosDocumentos' },
        { 'name': 'CertificadoMedico' },
        { 'name': 'CertificadoEnfermeiro' },
        
        { 'name': 'ContratoIntegraData' },
        { 'name': 'AlvaraData' },
        { 'name': 'ContratoSocialData' },
        { 'name': 'VigilanciaSanitariaData' },
        { 'name': 'RegimeInternoData' },
        { 'name': 'DocRespClinicaData' },
        { 'name': 'DocRespTecnicoData' },
        { 'name': 'OutrosDocumentosData' },
        { 'name': 'CertificadoMedicoData' },
        { 'name': 'CertificadoEnfermeiroData' }
        
    ],
    options: {
        oLanguage: {
            sUrl: '@Url.Content("~/Content/table-lang-br.txt")    '
    }
}
}"
                                           class="table table-striped table-bordered table-hover">
                                        <thead>
                                            <tr>
                                                <th style="width: 500px!important">Clínica</th>

                                                @*<th>Documento</th>*@
                                                <th>Contrato Íntegra</th>
                                                <th>Contrato Íntegra Venc</th>

                                                <th>Alvará</th>
                                                <th>Alvara Venc</th>

                                                <th>Contrato Social</th>
                                                <th>Contrato Social Venc</th>

                                                <th>Vigilância Sanitária</th>
                                                <th>Vigilância Sanitária Venc</th>

                                                <th>Regime Interno</th>
                                                <th>Regime Interno Venc</th>

                                                <th>Doc Resp Clinica</th>
                                                <th>Doc Resp Clinica Venc</th>

                                                <th>Doc Resp Tecnico</th>
                                                <th>Doc Resp Tecnico Venc</th>

                                                <th>Outros Doc</th>
                                                <th>Outros Doc Venc</th>

                                                <th>Certif. Médico</th>
                                                <th>Certif. Médico Venc</th>

                                                <th>Certif. Enfermeiro</th>
                                                <th>Certif. Enfermeiro Venc</th>

                                                @*<th>Validade</th>
                                            <th>Status</th>*@
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-actions">
                    <button data-bind="visible: ConsultaDocumento().length" onclick="export_excel('gridConsultaDocumento');" class="bbtnn bbtnn-gray"><i class="icon-file"></i>Exportar Excel</button>
                </div>
            </div>
        </div>
    </div>
</div>
@Html.Partial("_LayoutFooter")

<script id="gridConsultaDocumentoTemplate" type="text/html">
    <td data-bind="text: NomeDaClinica" style="width: 500px!important"></td>
    @*<td data-bind="text: NomeDoDocumento" style="text-align: center; width: 460px;"></td>*@

    <td data-bind="text: ContratoIntegra" style="width: 150px!important"></td>
    <td data-bind="dateExtension: ContratoIntegraDataTratamentoNull" style="width: 100px!important"></td>

    <td data-bind="text: Alvara" style="width: 150px!important"></td>
    <td data-bind="dateExtension: AlvaraDataTratamentoNull" style="width: 100px!important"></td>

    <td data-bind="text: ContratoSocial" style="width: 150px!important"></td>
    <td data-bind="dateExtension: ContratoSocialDataTratamentoNull" style="width: 100px!important"></td>

    <td data-bind="text: VigilanciaSanitaria" style="width: 150px!important"></td>
    <td data-bind="dateExtension: VigilanciaSanitariaDataTratamentoNull" style="width: 100px!important"></td>

    <td data-bind="text: RegimeInterno" style="width: 150px!important"></td>
    <td data-bind="dateExtension: RegimeInternoDataTratamentoNull" style="width: 100px!important"></td>

    <td data-bind="text: DocRespClinica" style="width: 150px!important"></td>
    <td data-bind="dateExtension: DocRespClinicaDataTratamentoNull" style="width: 100px!important"></td>

    <td data-bind="text: DocRespTecnico" style="width: 150px!important"></td>
    <td data-bind="dateExtension: DocRespTecnicoDataTratamentoNull" style="width: 100px!important"></td>

    <td data-bind="text: OutrosDocumentos" style="width: 150px!important"></td>
    <td data-bind="dateExtension: OutrosDocumentosDataTratamentoNull" style="width: 100px!important"></td>

    <td data-bind="text: CertificadoMedico" style="width: 150px!important"></td>
    <td data-bind="dateExtension: CertificadoMedicoDataTratamentoNull" style="width: 100px!important"></td>

    <td data-bind="text: CertificadoEnfermeiro" style="width: 150px!important"></td>
    <td data-bind="dateExtension: CertificadoEnfermeiroDataTratamentoNull" style="width: 100px!important"></td>

</script>

<script>
    
    $(document).ready(function() {
        var view = new ConsultaDocumentoViewModel();
        ko.applyBindings(view, $("#DivPageDocsClinicaViewModel").get(0));
        
        $(".ui-dialog-titlebar").hide();
        $(".ui-dialog-buttonpane").hide();
    });
    

    function NotaFiscalViewModel(documento, parent) {
        var self = this;
        self.Parent = parent;

        self.NomeDaClinica = ko.observable(documento.ClinicaNome);
        self.ContratoIntegra = ko.observable(documento.ContratoIntegra);
        self.Alvara = ko.observable(documento.Alvara);
        self.ContratoSocial = ko.observable(documento.ContratoSocial);
        self.VigilanciaSanitaria = ko.observable(documento.VigilanciaSanitaria);
        self.RegimeInterno = ko.observable(documento.RegimeInterno);
        self.DocRespClinica = ko.observable(documento.DocRespClinica);
        self.DocRespTecnico = ko.observable(documento.DocRespTecnico);
        self.OutrosDocumentos = ko.observable(documento.OutrosDocumentos);
        self.CertificadoMedico = ko.observable(documento.CertificadoMedico);
        self.CertificadoEnfermeiro = ko.observable(documento.CertificadoEnfermeiro);

        self.ContratoIntegraData = ko.observable(documento.ContratoIntegraData);
        self.AlvaraData = ko.observable(documento.AlvaraData);
        self.ContratoSocialData = ko.observable(documento.ContratoSocialData);
        self.VigilanciaSanitariaData = ko.observable(documento.VigilanciaSanitariaData);
        self.RegimeInternoData = ko.observable(documento.RegimeInternoData);
        self.DocRespClinicaData = ko.observable(documento.DocRespClinicaData);
        self.DocRespTecnicoData = ko.observable(documento.DocRespTecnicoData);
        self.OutrosDocumentosData = ko.observable(documento.OutrosDocumentosData);
        self.CertificadoMedicoData = ko.observable(documento.CertificadoMedicoData);
        self.CertificadoEnfermeiroData = ko.observable(documento.CertificadoEnfermeiroData);
        
        self.ContratoIntegraDataTratamentoNull = ko.computed(function () {
            if (self.ContratoIntegraData() != "/Date(-62135589600000)/")
                return self.ContratoIntegraData();
            else
                return "--";
        });

        self.AlvaraDataTratamentoNull = ko.computed(function () {
            if (self.AlvaraData() != "/Date(-62135589600000)/")
                return self.AlvaraData();
            else
                return "--";
        });
        self.ContratoSocialDataTratamentoNull = ko.computed(function () {
            if (self.ContratoSocialData() != "/Date(-62135589600000)/")
                return self.ContratoSocialData();
            else
                return "--";
        });
        self.VigilanciaSanitariaDataTratamentoNull = ko.computed(function () {
            if (self.VigilanciaSanitariaData() != "/Date(-62135589600000)/")
                return self.VigilanciaSanitariaData();
            else
                return "--";
        });
        self.RegimeInternoDataTratamentoNull = ko.computed(function () {
            if (self.RegimeInternoData() != "/Date(-62135589600000)/")
                return self.RegimeInternoData();
            else
                return "--";
        });
        self.DocRespClinicaDataTratamentoNull = ko.computed(function () {
            if (self.DocRespClinicaData() != "/Date(-62135589600000)/")
                return self.DocRespClinicaData();
            else
                return "--";
        });
        self.DocRespTecnicoDataTratamentoNull = ko.computed(function () {
            if (self.DocRespTecnicoData() != "/Date(-62135589600000)/")
                return self.DocRespTecnicoData();
            else
                return "--";
        });
        self.OutrosDocumentosDataTratamentoNull = ko.computed(function () {
            if (self.OutrosDocumentosData() != "/Date(-62135589600000)/")
                return self.OutrosDocumentosData();
            else
                return "--";
        });
        
        self.CertificadoMedicoDataTratamentoNull = ko.computed(function () {
            if (self.CertificadoMedicoData() != "/Date(-62135589600000)/")
                return self.CertificadoMedicoData();
            else
                return "--";
        });
        
        self.CertificadoEnfermeiroDataTratamentoNull = ko.computed(function () {
            if (self.CertificadoEnfermeiroData() != "/Date(-62135589600000)/")
                return self.CertificadoEnfermeiroData();
            else
                return "--";
        });

        //self.applyCssStyle = ko.computed(function () {
        //    if (self.Status() == "Inativo")
        //        return "label label-warning";
        //    else if (self.Status() == "Ativo")
        //        return "label label-success";
        //    else
        //        return "label label-info";
        //});
    }
    
    function layout(indices) {
        if (indices>0) {
            $("#colTableGestao").show();
            $("#rowTableGestao").show();
        }else {
            $("#colTableGestao").hide();
            $("#rowTableGestao").hide();
        }
    }

    function ConsultaDocumentoViewModel() {
        var self = this;
        var allData = @Html.Raw(Json.Encode(Model));
        var mappedData = jQuery.map(allData, function (item) { return new NotaFiscalViewModel(item, self); });
        self.ConsultaDocumento = ko.observableArray(mappedData);

        layout(self.ConsultaDocumento().length);
        
        //Gerar Excel Clinicas.
        self.generate_excel = function () {
            export_excel("gridConsultaDocumento");
        };
    }

    
    
    function export_excel(tableid) {
        var html1 = '';
        var oTable = $('#'+tableid).dataTable().fnGetData();
       
        html1+="<html><table>";
        html1+="<tr>";
        $('#'+tableid+' thead th').each(function() {
            if(this.textContent != ''){
                html1 += "<th style='text-align:left;vertical-align:middle;width:100%'>" + this.textContent + "</th>";
            }
        });
        html1+="</tr>";
        for (var count = 0; count <= oTable.length - 1; count++) {
            html1+="<tr>";
            html1+="<td style='text-align:left;vertical-align:middle;width:100%'>"+oTable[count].NomeDaClinica.toString()+"</td>";
            
            html1+="<td style='text-align:left;vertical-align:middle;width:100%'>"+oTable[count].ContratoIntegra.toString()+"</td>";
            html1 += "<td style='text-align:left;vertical-align:middle;width:100%'>" + converterDataExportar(oTable[count].ContratoIntegraDataTratamentoNull()) + "</td>";
            html1+="<td style='text-align:left;vertical-align:middle;width:100%'>"+oTable[count].Alvara.toString()+"</td>";
            html1 += "<td style='text-align:left;vertical-align:middle;width:100%'>" + converterDataExportar(oTable[count].AlvaraDataTratamentoNull().toString()) + "</td>";
            html1+="<td style='text-align:left;vertical-align:middle;width:100%'>"+oTable[count].ContratoSocial.toString()+"</td>";
            html1 += "<td style='text-align:left;vertical-align:middle;width:100%'>" + converterDataExportar(oTable[count].ContratoSocialDataTratamentoNull().toString()) + "</td>";
            html1+="<td style='text-align:left;vertical-align:middle;width:100%'>"+oTable[count].VigilanciaSanitaria.toString()+"</td>";
            html1 += "<td style='text-align:left;vertical-align:middle;width:100%'>" + converterDataExportar(oTable[count].VigilanciaSanitariaDataTratamentoNull().toString()) + "</td>";
            html1+="<td style='text-align:left;vertical-align:middle;width:100%'>"+oTable[count].RegimeInterno.toString()+"</td>";
            html1 += "<td style='text-align:left;vertical-align:middle;width:100%'>" + converterDataExportar(oTable[count].RegimeInternoDataTratamentoNull().toString()) + "</td>";
            html1+="<td style='text-align:left;vertical-align:middle;width:100%'>"+oTable[count].DocRespClinica.toString()+"</td>";
            html1 += "<td style='text-align:left;vertical-align:middle;width:100%'>" + converterDataExportar(oTable[count].DocRespClinicaDataTratamentoNull().toString()) + "</td>";
            html1+="<td style='text-align:left;vertical-align:middle;width:100%'>"+oTable[count].DocRespTecnico.toString()+"</td>";
            html1 += "<td style='text-align:left;vertical-align:middle;width:100%'>" + converterDataExportar(oTable[count].DocRespTecnicoDataTratamentoNull().toString()) + "</td>";
            html1+="<td style='text-align:left;vertical-align:middle;width:100%'>"+oTable[count].OutrosDocumentos.toString()+"</td>";
            html1 += "<td style='text-align:left;vertical-align:middle;width:100%'>" + converterDataExportar(oTable[count].OutrosDocumentosDataTratamentoNull().toString()) + "</td>";
            html1+="<td style='text-align:left;vertical-align:middle;width:100%'>"+oTable[count].CertificadoMedico.toString()+"</td>";
            html1 += "<td style='text-align:left;vertical-align:middle;width:100%'>" + converterDataExportar(oTable[count].CertificadoMedicoDataTratamentoNull().toString()) + "</td>";
            html1+="<td style='text-align:left;vertical-align:middle;width:100%'>"+oTable[count].CertificadoEnfermeiro.toString()+"</td>";
            html1 += "<td style='text-align:left;vertical-align:middle;width:100%'>" + converterDataExportar(oTable[count].CertificadoEnfermeiroDataTratamentoNull().toString()) + "</td>";

            html1+="</tr>";
        }
        html1+="</table></html>";

        window.open('data:application/vnd.ms-excel;base64,' + base64_encode(html1));
    }
	
    function base64_encode (data) {
        var b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        var o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, enc = "", tmp_arr = [];

        if (!data) {
            return data;
        }

        do {
            o1 = data.charCodeAt(i++);
            o2 = data.charCodeAt(i++);
            o3 = data.charCodeAt(i++);
            bits = o1 << 16 | o2 << 8 | o3;
            h1 = bits >> 18 & 0x3f;
            h2 = bits >> 12 & 0x3f;
            h3 = bits >> 6 & 0x3f;
            h4 = bits & 0x3f;
            tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);
        } while (i < data.length);
        enc = tmp_arr.join('');
        var r = data.length % 3;
        return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);
    }
    
    function converterDataExportar(data) {
        if(data != "--") {
            return $.datepicker.formatDate("dd/mm/yy", new Date(data.match(/\d+/)[0] * 1));    
        }
        return data;
    }
</script>
