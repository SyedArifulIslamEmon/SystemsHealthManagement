@model IList<Integra.Web.Models.ClinicaViewModel>
@using Integra.Web.Helpers

@{
    ViewBag.Title = ": Painel de Controle Íntegra Medical : Gestão de Clínicas :";
    Layout = "~/Views/Shared/_LayoutMaster.module.cshtml";
}

@Scripts.Render("~/dataTables")

<div class="container-fluid" id="main-container" style="padding-top: 10px;">
    <div id="main-content" class="clearfix">
        <div id="page-content" class="clearfix">
            <div class="page-header position-relative">
                <h3>Clínicas <small></small></h3>
            </div>
            <div class="row-fluid">
                <div class="row-fluid">
                    <div class="span12">
                        <div id="DivPageClinicaViewModel">
                            <table id="gridClinicas" data-bind="dataTable:{
    dataSource: Clinicas,
    rowTemplate: 'gridClinicasTemplate',
    sPaginationType: 'bootstrap',
    iDisplayLength: 10,
    gridId: 'gridClinicas',
    autoWidth: false,
    sDom: 'fptr',
    columns:
	[
		{ 'name': 'Nome' },
		{ 'name': 'Cnpj' },
		{ 'name': 'Cidade' },
		{ 'name': 'Uf' },
		{ 'name': 'Status' }
	],
    options: {
        oLanguage: {
            sUrl: '@Url.Content("~/Content/table-lang-br.txt")    '
    }
}
}"
                                   class="table table-striped table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th>Nome</th>
                                        <th>CNPJ</th>
                                        <th>Cidade</th>
                                        <th>UF</th>
                                        <th>Status</th>

                                        <th id="filterTableClinica"></th>

                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>

                            <div class="hr hr8 hr-double hr-dotted"></div>
                            <div class="row-fluid">
                                <div id="tableFooter" class="span12 pull-right" style="padding-right: 20px;">
                                    <h4 class="pull-right">Qtde de Clinicas: <span class="red" data-bind="text: TotalClinicas"></span>| 
                                            Qtde de Clinicas <span class="green">Ativas: </span><span data-bind="    text: TotalClinicasAtivas" class="red"></span>| 
                                            Qtde de Clinicas <span class="red" style="color: red!important">Inativas: </span><span data-bind="text: TotalClinicasInativas" class="red"></span>
                                    </h4>
                                </div>
                            </div>

                            <div class="form-actions">
                                @if (User.ToPessoa().Usuario.PertenceAoGrupo(ViewBag.GrupoIntegra))
                                {
                                    <button data-bind="click: AdicionarNovaClinica" class="bbtnn bbtnn-info"><i class="icon-ok icon-white"></i>Adicionar</button>
                                }
                                <button data-bind="visible: Clinicas().length, click: generate_excel" class="bbtnn bbtnn-gray"><i class="icon-file"></i>Exportar Excel</button>
                            </div>
                            <div style="display: none;" data-bind="dialog: { isOpen: ExcluirClinicaDialog, modal: true, title: '', width: '0px', height: '0px' }">
                                <div class="modal">
                                    <div class="modal-header">
                                        <h4>Remover Clínica</h4>
                                    </div>
                                    <div class="modal-body">
                                        <div data-bind="with: ClinicaSendoExcluida">
                                            Você deseja remover esta Clínica?
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button data-bind="click: CancelarExclucaoClinica" class="bbtnn bbtnn-gray" value="Não">Não</button>
                                        <button data-bind="click: EfetivarExclucaoClinica" class="bbtnn bbtnn-danger" value="Sim"><i class="icon-ok"></i>Sim</button>
                                    </div>
                                </div>
                            </div>
                            <div style="display: none;" data-bind="dialog: { isOpen: NovaClinicaDialog, modal: true, title: '', width: '0px', height: '0px' }">
                                <div data-bind="html: NovaClinicaHtml"></div>
                            </div>
                            <div style="display: none;" data-bind="dialog: { isOpen: AlterarStatusDialog, modal: true, title: '', width: '0px', height: '0px' }">
                                <div data-bind="html: AlterarStatusHtml"></div>
                            </div>
                            <div style="display: none;" data-bind="dialog: { isOpen: AdicionarDocumentoDialog, modal: true, title: '', width: '0px', height: '0px' }">
                                <div data-bind="html: AdicionarDocumentoHtml"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Html.Partial("_LayoutFooter")

<script id="gridClinicasTemplate" type="text/html">
    <td data-bind="text: Nome"></td>
    <td data-bind="text: formataCnpj" style="text-align: center; width: 160px;"></td>
    <td data-bind="text: Cidade"></td>
    <td data-bind="text: Uf" style="text-align: center; width: 50px;"></td>
    <td class='hidden-480' style="text-align: center; width: 80px;"><span class="" data-bind="text: Status, attr: { 'class': applyCssStyle}"></span></td>

    <td id="resultTableClinica" style="text-align: center; width: 40px;">
        <div class='hidden-phone visible-desktop btn-group'>
            @if (User.ToPessoa().Usuario.PertenceAoGrupo(ViewBag.GrupoIntegra))
            {
                <button data-bind="click: Editar" class='btn btn-mini btn-info tooltip-info' data-rel="tooltip" title="Editar" data-placement="left"><i class='icon-edit'></i></button>
            }
            @if (!User.ToPessoa().Usuario.PertenceAoGrupo(ViewBag.GrupoIntegra))
            {
                <button data-bind="click: Visualizar" class='btn btn-mini btn-grey tooltip-info' data-rel="tooltip" title="Visualizar" data-placement="left"><i class='icon-list-alt'></i></button>
            }
            <button data-bind="click: AlterarStatus" class='btn btn-mini btn-success tooltip-info' data-rel="tooltip" title="Alterar Status" data-placement="left"><i class='icon-ok'></i></button>
            <button data-bind="click: AlterarForcaDeVenda" class='btn btn-mini btn-yellow tooltip-info' data-rel="tooltip" title="Alterar Força de Vendas" data-placement="left"><i class='icon-user'></i></button>
            <button data-bind="click: AdicionarDocumento" class='btn btn-mini btn-warning tooltip-info' data-rel="tooltip" title="Documentos" data-placement="left"><i class='icon-file'></i></button>
            @if (User.ToPessoa().Usuario.PertenceAoGrupo(ViewBag.GrupoIntegra))
            {
                <button data-bind="click: Excluir" class='btn btn-mini btn-danger tooltip-info' data-rel="tooltip" title="Excluir" data-placement="left"><i class='icon-trash'></i></button>
            }
        </div>
    </td>
</script>

<script type="text/javascript">
    $(document).ready(function () {
        var view = new ClinicaView();
        ko.applyBindings(view, $("#DivPageClinicaViewModel").get(0));
		
        $(".ui-dialog-titlebar").hide();
        $(".ui-dialog-buttonpane").hide();
    });
	
    function ClinicaTableView(data, parent) {
        var self = this;
        self.Parent = parent;

        self.Codigo = data.Codigo;
        self.Nome = ko.observable(data.Nome);
        self.Cnpj = ko.observable(data.Cnpj);
        self.Cidade = ko.observable(data.Cidade);
        self.Uf = ko.observable(data.Uf);
        self.Status = ko.observable(data.Status);    

        self.formataCnpj = ko.computed(function () {
            var v = self.Cnpj();
            v = v.replace(/\D/g, "");
            v = v.replace(/^(\d{2})(\d)/, "$1.$2");
            v = v.replace(/^(\d{2})\.(\d{3})(\d)/, "$1.$2.$3");
            v = v.replace(/\.(\d{3})(\d)/, ".$1/$2");
            v = v.replace(/(\d{4})(\d)/, "$1-$2");
			
            if(v=="")
                v = "-";

            return v;
        });

        self.applyCssStyle = ko.computed(function () {
            if (self.Status() == "Inativo")
                return "label label-warning";
            else if (self.Status() == "Ativo")
                return "label label-success";
            else
                return "label label-info";
        });
		
        self.Editar = function (clinica) {
            self.Parent.Editar(clinica);
        };
		
        self.Visualizar = function (clinica) {
            self.Parent.Visualizar(clinica);
        };
		
        self.AdicionarDocumento = function (clinica) {
            self.Parent.AdicionarDocumento(clinica);
        };
			
        self.Excluir = function (clinica) {
            self.Parent.Excluir(clinica);
        };
		
        self.AlterarStatus = function (clinica) {
            self.Parent.AlterarStatus(clinica);
        };
		
        self.AlterarForcaDeVenda = function (clinica) {
            self.Parent.AlterarForcaDeVenda(clinica);
        };
    }

    function ClinicaView() {
        var self = this;

        self.NovaClinicaDialog = ko.observable(false);
        self.NovaClinicaHtml = ko.observable(null);
		
        self.AlterarStatusDialog = ko.observable(false);
        self.AlterarStatusHtml = ko.observable(null);
		
        self.ExcluirClinicaDialog = ko.observable(false);
        self.ClinicaSendoExcluida = ko.observable(null);

        self.AdicionarDocumentoDialog = ko.observable(false);
        self.AdicionarDocumentoHtml = ko.observable(null);

        self.Visualizar = ko.observable(null);

        var allData = @Html.Raw(Json.Encode(Model));
        var mappedData = jQuery.map(allData, function (item) { return new ClinicaTableView(item, self); });
        self.Clinicas = ko.observableArray(mappedData);
        arrumarLayout(self.Clinicas().length);
        self.ClinicaEditando = null;
        // ----------------------------------------------
        // ----------------- INICIO ADICIONAR
        self.AdicionarNovaClinica = function() {
            self.NovaClinicaHtml(null);
            $.get('@Url.Action("AddEditClinica", null, "Clinica")', null, function (html) {
		        self.NovaClinicaHtml(html);
		        new window.NovaClinicaFactory(self);
		        self.NovaClinicaDialog(true);
		        arrumarLayout(self.Clinicas().length);
		    });
		};
		
        self.FecharAlterarStatus = function() {
            self.AlterarStatusDialog(false);
            self.AlterarStatusHtml(null);
        };

        self.FecharCadastroDeClinica = function(clinica) {
            self.NovaClinicaHtml(null);

            if(clinica!=null) {
                if(self.ClinicaEditando != null)
                    self.Clinicas(ko.utils.arrayFilter(self.Clinicas(), function(clinic) {
                        return clinic.Codigo != self.ClinicaEditando.Codigo;
                    }));
                self.ClinicaEditando = null;
                self.Clinicas.push(new ClinicaTableView(clinica, self));
            }
            self.NovaClinicaDialog(false);
            arrumarLayout(self.Clinicas().length);
        };

        self.AlterarForcaDeVenda = function(clinica) {
            self.AlterarStatusHtml(null);
            $.get('@Url.Action("AlterarForcaDeVenda")', { id: clinica.Codigo }, function(html) {
                self.AlterarStatusHtml(html);
                new window.AlterarForcaDeVendaFactory(self);
                self.AlterarStatusDialog(true);
            });
        };
		
        self.AlterarStatus = function(clinica) {
            self.AlterarStatusHtml(null);
            $.get('@Url.Action("AlterarStatus")', { id: clinica.Codigo }, function(html) {
                self.AlterarStatusHtml(html);
                new window.AltearaStatusClinicaFactory(self);
                self.AlterarStatusDialog(true);
            });
        };

        self.CancelarCadastroDeClinica = function() {
            self.NovaClinicaHtml(null);
            self.ClinicaEditando = null;
            self.NovaClinicaDialog(false);
            arrumarLayout(self.Clinicas().length);
        };
        // ----------------- FIM ADICIONAR
        // ----------------------------------------------
        // ----------------- INICIO EDITAR
        self.Editar = function(clinica) {
            self.NovaClinicaHtml(null);
            self.ClinicaEditando = clinica;
            $.ajaxSetup({
                // Disable caching of AJAX responses
                cache: false
            });
            $.get('@Url.Action("AddEditClinica", null, "Clinica")', { id: clinica.Codigo }, function(html) {
                self.NovaClinicaDialog(true);
                self.NovaClinicaHtml(html);
                new window.NovaClinicaFactory(self);
                arrumarLayout(self.Clinicas().length);
            });
        };
        // ----------------- FIM EDITAR
        // ----------------------------------------------
        // ----------------- INICIO VISUALIZAR
        self.Visualizar = function(clinica) {
            self.NovaClinicaHtml(null);
            self.ClinicaEditando = clinica;
            self.Visualizar = 1;
            $.get('@Url.Action("AddEditClinica", null, "Clinica")', { id: clinica.Codigo }, function(html) {
                self.NovaClinicaHtml(html);
                new window.NovaClinicaFactory(self);
                self.NovaClinicaDialog(true);
                arrumarLayout(self.Clinicas().length);
                self.Visualizar = ko.observable(null);
            });
        };
        // ----------------- FIM VISUALIZAR
        // ----------------------------------------------
        // ----------------- INICIO EXCLUIR
        self.Excluir = function(clinica) {
            self.ExcluirClinicaDialog(true);
            self.ClinicaSendoExcluida(clinica);
            arrumarLayout(self.Clinicas().length);
        };

        self.CancelarExclucaoClinica = function() {
            self.ExcluirClinicaDialog(false);
            self.ClinicaSendoExcluida(null);
            arrumarLayout(self.Clinicas().length);
        };
		
        self.EfetivarExclucaoClinica = function() {
            $.post('@Url.Action("ExcluirClinica", null, "Clinica")', { codigo: self.ClinicaSendoExcluida().Codigo }, function(resposta) {
                if (resposta.Sucesso) {
                    //alert("Clínica excluida com sucesso.");
                    self.Clinicas(
						ko.utils.arrayFilter(self.Clinicas(), function(ser) {
						    return ser.Codigo != self.ClinicaSendoExcluida().Codigo;
						}));
                    self.ClinicaSendoExcluida(null);
                    self.ExcluirClinicaDialog(false);
                    arrumarLayout(self.Clinicas().length);
                } else {
                    //alert("Algum Erro ocorreu durante a exclução desta Clínica!");
                }
            });
        };
        // ----------------- FIM EXCLUIR
        // ----------------------------------------------
        // ----------------- INICIO ADICIONAR DOCUMENTO
        self.AdicionarDocumento = function (clinica) {
            self.AdicionarDocumentoHtml(null);
            $.get('@Url.Action("AddEditClinicaDocumentos", null, "Clinica")', { codigoDaClinica: clinica.Codigo }, function(html) {
                self.AdicionarDocumentoHtml(html);
                new window.ClinicaDocumentoFactory(self);
                self.AdicionarDocumentoDialog(true);
                arrumarLayout(self.Clinicas().length);
            });
        };

        self.FecharAdicionarDocumentoParaClinica = function() {
            self.AdicionarDocumentoHtml(null);
            self.AdicionarDocumentoDialog(false);
        };
        // ----------------- FIM ADICIONAR DOCUMENTO
        // ----------------------------------------------

        //Total de clinicas rodapé
        self.TotalClinicas = self.Clinicas().length;
	    
        //Total de clinicas Ativas rodapé
        self.TotalClinicasAtivas = ko.computed(function() {
            return ko.utils.arrayFilter(self.Clinicas(), function(cli) {
                return (cli.Status() == "Ativo");
            }).length;
        });
	    
        //Total de clinicas Ativas rodapé
        self.TotalClinicasInativas = ko.computed(function() {
            return ko.utils.arrayFilter(self.Clinicas(), function(cli) {
                return (cli.Status() != "Ativo");
            }).length;
        });
	    
        //Gerar Excel Clinicas.
        self.generate_excel = function () {
            export_excel("gridClinicas");
        };
    }
	
    function arrumarLayout(indices) {
        if(indices>0) {
            $("#filterTableClinica").show();
            $("#resultTableClinica").show();
        }else {
            $("#filterTableClinica").hide();
            $("#resultTableClinica").hide();
        }
    }

    function export_excel(tableid) {
        var html = '';
        var oTable = $('#'+tableid).dataTable().fnGetData();
       
        html+="<html><table>";
        html+="<tr>";
        $('#'+tableid+' thead th').each(function() {
            if(this.textContent != ''){
                html += "<th style='text-align:left;vertical-align:middle;width:100%'>" + this.textContent + "</th>";
            }
        });
        html+="</tr>";
        for (var count = 0; count <= oTable.length - 1; count++) {
            html+="<tr>";
            html+="<td style='text-align:left;vertical-align:middle;width:100%'>"+oTable[count].Nome.toString()+"</td>";
            html+="<td style='text-align:left;vertical-align:middle;width:100%'>"+oTable[count].Cnpj.toString()+"</td>";
            html+="<td style='text-align:left;vertical-align:middle;width:100%'>"+oTable[count].Cidade.toString()+"</td>";
            html+="<td style='text-align:left;vertical-align:middle;width:100%'>"+oTable[count].Uf.toString()+"</td>";
            html+="<td style='text-align:left;vertical-align:middle;width:100%'>"+oTable[count].Status.toString()+"</td>";

            html+="</tr>";
        }
        html+="</table></html>";

        window.open('data:application/vnd.ms-excel;base64,' + base64_encode(html));
    }
	
    function base64_encode (data) {
        var b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        var o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, enc = "", tmp_arr = [];

        if (!data) {
            return data;
        }

        do {
            o1 = data.charCodeAt(i++);
            o2 = data.charCodeAt(i++);
            o3 = data.charCodeAt(i++);
            bits = o1 << 16 | o2 << 8 | o3;
            h1 = bits >> 18 & 0x3f;
            h2 = bits >> 12 & 0x3f;
            h3 = bits >> 6 & 0x3f;
            h4 = bits & 0x3f;
            tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);
        } while (i < data.length);
        enc = tmp_arr.join('');
        var r = data.length % 3;
        return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);
    }
	
</script>
