@model Integra.Dominio.TipoDaAprovacao

<div id="DivAddEditAprovacaoViewModel">
	<form data-bind="submit: Salvar">
		<div class="modal">
			<div class="modal-header">
				<h4>Adicionar Documento</h4>
			</div>
			<div class="modal-body">
				<div class="row-fluid">
					<div class="form-horizontal" data-bind="validationOptions: { insertMessages: false, decorateElement: true, messagesOnModified: false }">
						<!-- ko with: NovaAprovacao -->
						<div class="control-group">
							<label class="control-label">Título</label>
							<div class="controls">
								<div class="row-fluid">
									<input type="text" data-bind="value: Titulo" />
								</div>
								<span class="error-inline" data-bind="validationMessage: Titulo"></span>
							</div>
						</div>
						<div class="control-group">
							<label class="control-label">Descrição</label>
							<div class="controls">
								<div class="row-fluid">
									<input type="text" data-bind="value: Descricao" />
								</div>
								<span class="error-inline" data-bind="validationMessage: Descricao"></span>
							</div>
						</div>
						<div class="control-group">
							<label class="control-label">Arquivo</label>
							<div class="controls">
								<div class="row-fluid">
									<input type="file" data-bind="file: Arquivo" />
								</div>
								<span class="error-inline" data-bind="validationMessage: Arquivo"></span>
							</div>
						</div>
						<!-- /ko -->
					</div>
				</div>
			</div>
			<div class="modal-footer">
				<button data-bind="click: Cancelar" class="bbtnn bbtnn-gray" value="Cancelar">Cancelar</button>
				<button type="submit" class="bbtnn bbtnn-success" value="Salvar"><i class="icon-ok"></i>Salvar</button>
			</div>
		</div>
	</form>
</div>
<script>

	function NovaAprovacao() {
		var self = this;
		self.Arquivo = ko.observable().extend({ required: true });
		self.Descricao = ko.observable().extend({ required: true });
		self.Titulo = ko.observable().extend({ required: true });
		self.ToFormData = function() {
			var formData = new window.FormData($(this)[0]);
			formData.append('Arquivo', self.Arquivo());
			formData.append('Descricao', self.Descricao());
			formData.append('Titulo', self.Titulo());
			formData.append('Tipo', @((int)Model));
			return formData;
		};
	}

	function AddEditAprovacaoViewModel(parent) {
		var self = this;
		self.Parent = parent;
		self.NovaAprovacao = new NovaAprovacao();
		self.NovaAprovacao = ko.validatedObservable(self.NovaAprovacao);

		self.Enviar = function () {
			$.ajax({
				url: '@Url.Action("AddEditAprovacao")',
				type: 'POST',
				data: self.NovaAprovacao().ToFormData(),
				async: false,
				success: function (retorno) {
					if (retorno.Sucesso) {
						self.Parent.FecharAddEditAprovacaoDiaglo(retorno);
						//alert("Aprovacao adicionada com sucesso!");
					} else {
						//alert("Algum erro ocorreu");
					}
				},
				cache: false,
				contentType: false,
				processData: false
			});
		};

		self.Salvar = function () {
			if (self.NovaAprovacao.isValid()) {
				self.Enviar();
			}else {
				self.NovaAprovacao.errors.showAllMessages(true);
			}
		};

		self.Cancelar = function () {
			self.Parent.FecharAddEditAprovacaoDiaglo({ Sucesso: false });
		};
	}

	function AddEditAprovacaoFactory(parent) {
		var view = new AddEditAprovacaoViewModel(parent);
		ko.applyBindings(view, $("#DivAddEditAprovacaoViewModel").get(0));
	}
</script>
