@model  IList<Integra.Web.Models.FaturaViewModel>
@using Integra.Web.Helpers
@{
	ViewBag.Title = ": Painel de Controle Íntegra Medical : Dados do Projeto : Investimentos :";
	Layout = "~/Views/Shared/_LayoutMaster.module.cshtml";
}

@Scripts.Render("~/dataTables")

<div class="container-fluid" id="main-container" style="padding-top: 10px;">
	<div id="main-content" class="clearfix">
		<div id="page-content" class="clearfix">
			<div class="page-header position-relative">
				<h3>Investimentos <small></small></h3>
			</div>
			<div class="row-fluid">
				<!-- PAGE CONTENT BEGINS HERE -->
				<div class="row-fluid">
					<div class="span12">
						<div id="DivPageFaturasViewModel">
							<table id="gridFaturas" data-bind="dataTable:{
	dataSource: Faturas,
	rowTemplate: 'gridFaturasTemplate',
	sPaginationType: 'bootstrap',
	iDisplayLength: 10,
	gridId: 'gridFaturas',
	autoWidth: false,
	sDom: 'fptr',
	columns:
	[
		{ 'name': 'Descricao' },
		{ 'name': 'Data' },
		{ 'name': 'Tipo' },
		{ 'name': 'Valor' },
		{ 'name': 'Documento' },
		{ 'name': 'NumeroDoDocumento' },
		{ 'name': 'Status' }
	],
	options: {
		oLanguage: {
		    sUrl: '@Url.Content("~/Content/table-lang-br.txt")'
		}
	}
}"
								class="table table-striped table-bordered table-hover">
								<thead>
									<tr>
										<th>Investimento</th>
										<th>Data</th>
										<th>Tipo</th>
										<th>Valor</th>
										<th>Documento</th>
										<th>Nrº Documento</th>
										<th class="hidden-480">Prev/Real</th>
										@if (User.ToPessoa().Usuario.PertenceAoGrupo(ViewBag.GrupoIntegra))
										{ 
											<th id="filterTableFaturas"></th>
										}
									</tr>
								</thead>
								<tbody>
								</tbody>
							</table>
							<div class="hr hr8 hr-double hr-dotted"></div>

							<div class="row-fluid">
								<div class="span5 pull-right" style="padding-right: 20px;">
									<h4 class="pull-right">Investimento Total : <span id="reportTotal" class="red"></span>
									</h4>
								</div>
							</div>
							<div class="form-actions">
								@if (User.ToPessoa().Usuario.PertenceAoGrupo(ViewBag.GrupoIntegra))
								{
									<button data-bind="click: AdicionarNovaFatura" class="bbtnn bbtnn-info"><i class="icon-ok icon-white"></i>Adicionar</button>
								}
								<button data-bind="visible: Faturas().length>0, click: generate_excel" class="bbtnn bbtnn-gray"><i class="icon-file"></i>Exportar</button>
							</div>
							<div style="display:none;" data-bind="dialog: { isOpen: NovaFaturaDialog, modal: true, title: '', width: '0px', height: '0px'}">
								<div data-bind="html: NovaFaturaHtml"></div>
							</div>
							<div style="display:none;" data-bind="dialog: { isOpen: ExcluirFaturaDialog, modal: true, title: '', width: '0px', height: '0px'}">
								<div class="modal">
									<div class="modal-header">
										<h4>Remover Investimento</h4>
									</div>
									<div class="modal-body">
										<div data-bind="with: FaturaSendoExcluida">
											Você deseja remover este Investimento?
										</div>
									</div>
									<div class="modal-footer">
										<button data-bind="click: CancelarExclucao" class="bbtnn bbtnn-gray" value="Não">Não</button>
										<button data-bind="click: EfetivarExclucao" class="bbtnn bbtnn-danger" value="Sim"><i class="icon-ok"></i>Sim</button>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
@Html.Partial("_LayoutFooter")

<script id="gridFaturasTemplate" type="text/html">
	<td data-bind="text: Descricao"></td>
	<td data-bind="date: Data" style="width: 130px;"></td>
	<td data-bind="text: Tipo" style="width: 70px;"></td>
	<td data-bind="money: Valor" style="width: 120px;"></td>
	<td data-bind="text: Documento" style="width: 120px;"></td>
	<td data-bind="text: NumeroDoDocumento" style="text-align: center; width: 120px;"></td>
	<td class='hidden-480' style="text-align: center; width: 100px;"><span class="" data-bind="text: Status, attr: { 'class': applyCssStyle}"></span></td>
	@if (User.ToPessoa().Usuario.PertenceAoGrupo(ViewBag.GrupoIntegra))
	{
		<td id="resultTableFaturas" style="text-align: center; width: 40px;">
			<div class='hidden-phone visible-desktop btn-group'>
				<button data-bind="click: Editar" class='btn btn-mini btn-info tooltip-info' data-rel="tooltip" title="Editar" data-placement="left"><i class='icon-edit'></i></button>
				<button data-bind="click: Excluir" class='btn btn-mini btn-danger tooltip-info' data-rel="tooltip" title="Excluir" data-placement="left"><i class='icon-trash'></i></button>
			</div>
		</td>
	}
</script>

<script type="text/javascript" language="javascript">
	$(document).ready(function () {
		var view = new FaturamentoView();
		ko.applyBindingsWithValidation(ko.validatedObservable(view), $("#DivPageFaturasViewModel").get(0));
		
		$(".ui-dialog-titlebar").hide();
		$(".ui-dialog-buttonpane").hide();
	});
	
	function FaturaTableView(data, parent) {
		var self = this;
		self.Parent = parent;

		self.Codigo = ko.observable(data.Codigo);
		self.Descricao = ko.observable(data.Descricao);
		self.Data = ko.observable(data.Data);
		self.Tipo = ko.observable(data.Tipo);
		self.Valor = ko.observable(data.Valor);
		self.Documento = ko.observable(data.Documento);
		self.NumeroDoDocumento = ko.observable(data.NumeroDoDocumento);
		self.Status = ko.observable(data.Status);

		self.Editar = function(fatura) {
			self.Parent.Editar(fatura);            
		};

		self.Excluir = function(fatura) {
			self.Parent.ExibirMensagemDeExcluir(fatura);            
		};

		self.applyCssStyle = ko.computed(function () {
			if (self.Status() === "Previsto")
				return "label label-warning";
			else if (self.Status() === "Realizado")
				return "label label-success";
			else
				return "label label-info";
		});
	}

	function FaturamentoView() {
		var self = this;
		
		self.FaturaSendoEditada = null;
		self.NovaFaturaDialog = ko.observable(false);
		self.ExcluirFaturaDialog = ko.observable(false);
		self.NovaFaturaHtml = ko.observable();
		self.FaturaSendoExcluida = ko.observable(null);
		
		var allData = @Html.Raw(Json.Encode(Model));
		var mappedData = jQuery.map(allData, function (item) { return new FaturaTableView(item, self); });
		self.Faturas = ko.observableArray(mappedData);

		arrumarLayout(self.Faturas().length);

		self.AdicionarNovaFatura = function () {
			self.NovaFaturaHtml(null);
			$.get('@Url.Action("AddEditFatura", "PainelDeControle")', null, function (html) {
				self.NovaFaturaHtml(html);
				new window.NovaFaturaFactory(self);
				self.NovaFaturaDialog(true);
			});
		};
		
		self.Editar = function(fatura) {
			self.NovaFaturaHtml(null);
			self.Faturas(
				ko.utils.arrayFilter(self.Faturas(), function(fat) {
					return fat.Codigo != fatura.Codigo;
				})
			);
			self.FaturaSendoEditada = fatura;
			$.get('@Url.Action("AddEditFatura", "PainelDeControle")', {codigo: fatura.Codigo() }, function (html) {
				self.NovaFaturaHtml(html);
				new window.NovaFaturaFactory(self);
				self.NovaFaturaDialog(true);
			});
			arrumarLayout(self.Faturas().length);
		};
		
		self.EfetivarExclucao = function() {
			$.post('@Url.Action("ExcluirFatura", "PainelDeControle")', { codigo: self.FaturaSendoExcluida().Codigo }, function(resposta) {
				if (resposta.Sucesso) {
					//alert("Fatura excluida com sucesso.");
					self.Faturas(
			   ko.utils.arrayFilter(self.Faturas(), function(fat) {
				   return fat.Codigo != self.FaturaSendoExcluida().Codigo; }));
					self.FaturaSendoExcluida(null);
					self.ExcluirFaturaDialog(false);
					arrumarLayout(self.Faturas().length);
				} else {
					//alert("Algum Erro ocorreu durante a exclução dessa fatura!");
				}
			});
		};
		
		self.Total = ko.computed(function () {
			var total = 0;
			ko.utils.arrayForEach(self.Faturas(), function (item) {
				total = total + item.Valor();
			});
			$("#reportTotal").text(accounting.formatMoney(total, "R$ ", 2, ".", ","));
			return total;
		});

		self.FecharCadastroDeFaturaCancelar = function() {
			if(self.FaturaSendoEditada != null)
				self.Faturas.push(self.FaturaSendoEditada);            
			self.NovaFaturaDialog(false);
			arrumarLayout(self.Faturas().length);
		};

		self.FecharCadastroDeFatura = function (fatura) {
			self.FaturaSendoEditada = null;
			self.Faturas.push(new FaturaTableView(fatura, self));
			self.NovaFaturaDialog(false);
			arrumarLayout(self.Faturas().length);
		};

		self.FecharDialogCadastroDeFatura = function () {
			self.NovaFaturaDialog(false);
		};

		self.CancelarExclucao = function() {
			self.ExcluirFaturaDialog(false);
			self.FaturaSendoExcluida(null);
		};

		self.ExibirMensagemDeExcluir = function(fatura) {
			self.ExcluirFaturaDialog(true);
			self.FaturaSendoExcluida(fatura);
		};
	    
		self.generate_excel = function () {
		    export_excel("gridFaturas");
		}; 
	}
	
	function arrumarLayout(indices) {
		if(indices>0) {
			$("#filterTableFaturas").show();
			$("#resultTableFaturas").show();
		}else {
			$("#filterTableFaturas").hide();
			$("#resultTableFaturas").hide();
		}
	}
	
	function export_excel(tableid) {
	    var table= document.getElementById(tableid);
	    var html = table.outerHTML;
	    window.open('data:application/vnd.ms-excel;base64,' + base64_encode(html));
	}

	function base64_encode (data) {
	    var b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
	    var o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, enc = "", tmp_arr = [];

	    if (!data) {
	        return data;
	    }

	    do {
	        o1 = data.charCodeAt(i++);
	        o2 = data.charCodeAt(i++);
	        o3 = data.charCodeAt(i++);
	        bits = o1 << 16 | o2 << 8 | o3;
	        h1 = bits >> 18 & 0x3f;
	        h2 = bits >> 12 & 0x3f;
	        h3 = bits >> 6 & 0x3f;
	        h4 = bits & 0x3f;
	        tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);
	    } while (i < data.length);
	    enc = tmp_arr.join('');
	    var r = data.length % 3;
	    return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);
	}
</script>
