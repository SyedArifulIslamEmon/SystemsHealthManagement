@using Integra.Web.Helpers
@model Integra.Web.Models.AdicionarAnexoAtaViewModel

<div id="DivAddEditAnexoAtaViewModel" data-bind="validationOptions: { insertMessages: false, decorateElement: true, messagesOnModified: false }">
	<div class="modal">
		<div class="modal-header">
			<h4>Gerenciar Anexos</h4>
		</div>
		<div class="modal-body">
			@if (User.ToPessoa().Usuario.PertenceAoGrupo(ViewBag.GrupoIntegra))
			{
				<div class="row-fluid">
					<div class="span12">
						<form data-bind="submit: Salvar">
							<div class="form-horizontal" data-bind="with: NovoAnexo">
								<div class="control-group">
									<label class="control-label">Descrição</label>
									<div class="controls">
										<div class="row-fluid">
											<input type="text" data-bind="value: Descricao" />
											<span class="error-inline" data-bind="validationMessage: Descricao"></span>
										</div>
									</div>
								</div>
								<div class="control-group">
									<label class="control-label">Arquivo</label>
									<div class="controls">
										<div class="row-fluid">
											<input type="file" data-bind="file: Arquivo" />
											<span class="error-inline" data-bind="validationMessage: Arquivo"></span>
										</div>
									</div>
								</div>
							</div>
							<div class="form-actions clearfix">
								<div class="pull-right">
									<button type="submit" class="bbtnn bbtnn-success"><i class='icon-plus'></i>Adicionar</button>
								</div>
							</div>
						</form>
					</div>
				</div>
			}
			<div class="row-fluid">
				<div class="span12">
					<table id="gridAnexo" data-bind="dataTable:
															{
																dataSource: Anexos,
																rowTemplate: 'gridAnexoTemplate',
																sPaginationType: 'bootstrap',
																iDisplayLength: 2,
																gridId: 'gridAnexo',
																sDom: 'fptr',
																autoWidth: false,
																columns:
																	[
																		{ 'name': 'Descricao' },
																		{ 'name': 'DataDeUpload' }
																	],
																options: {
																	oLanguage: {
																		sUrl: '@Url.Content("~/Content/table-lang-br.txt")    '
															}
														}
														}"
					   class="table table-striped table-bordered table-hover">
						<thead>
							<tr>
								<th>Descrição</th>
								<th>Enviado</th>
								<th id="filterTableAnexo"></th>
							</tr>
						</thead>
						<tbody>
						</tbody>
					</table>
				</div>
			</div>
		</div>
		<div class="modal-footer">
			<button data-bind="click: Fechar" class="bbtnn bbtnn-gray" value="Fechar">Fechar</button>
		</div>
	</div>
</div>
<script id="gridAnexoTemplate" type="text/html">
	<td data-bind="text: Descricao"></td>
	<td data-bind="date: DataDeUpload"></td>

	<td id="resultTableAnexo" style="text-align: center; width: 20px;">
		<div class='hidden-phone visible-desktop btn-group'>
			<button data-bind="click: Baixar" class='btn btn-mini btn-info tooltip-info' data-rel="tooltip" title="Baixar" data-placement="left"><i class='icon-download-alt'></i></button>
			@if (User.ToPessoa().Usuario.PertenceAoGrupo(ViewBag.GrupoIntegra))
			{
				<button data-bind="click: Excluir" class='btn btn-mini btn-danger tooltip-info' data-rel="tooltip" title="Excluir" data-placement="left"><i class='icon-trash'></i></button>
			}
				</div>
	</td>
</script>

<script>
	
	function showHide(indices) {
		if(indices>0) {
			$("#filterTableAnexo").show();
			$("#resultTableAnexo").show();
		}else {
			$("#filterTableAnexo").hide();
			$("#resultTableAnexo").hide();
		}
	}

	function NovoAnexoAta(parent) {
		var self = this;
		self.Parent = parent;
		self.Arquivo = ko.observable().extend({ required: true });
		self.Descricao = ko.observable().extend({ required: true });
		self.ToJson = function() {
			var anexo = new Object();
			anexo.Arquivo = self.Arquivo();
			anexo.Descricao = self.Descricao();
		};
		self.ToFormData = function() {
			var formData = new window.FormData($(this)[0]);
			formData.append('Arquivo', self.Arquivo());
			formData.append('Descricao', self.Descricao());
			formData.append('CodigoDaReuniao', @Model.CodigoDaReuniao);
			formData.append('CodigoDaAta', @Model.CodigoDaAta);
			return formData;
		};
	}

	function AddEditAnexoAtaViewModel(parent) {
		var self = this;
		self.Parent = parent;
		
		var allData = @Html.Raw(Json.Encode(Model.Anexos));
		var mappedData = jQuery.map(allData, function (item) { return new AnexosTableView(item, self); });
		self.Anexos = ko.observableArray(mappedData);
		
		self.NovoAnexo = new NovoAnexoAta(self);
		self.NovoAnexo = ko.validatedObservable(self.NovoAnexo);

		showHide(self.Anexos().length);

		self.Enviar = function() {
			$.ajax({
				url: '@Url.Action("AddEditAnexoAta")',
				type: 'POST',
				data: self.NovoAnexo().ToFormData(),
				async: false,
				success: function (retorno) {
					if (retorno.Sucesso) {
						showHide(self.Anexos().length);
						self.NovoAnexo().Descricao(null);
						self.NovoAnexo().Arquivo(null);
						self.Anexos.push(new AnexosTableView(retorno.Anexo, self));
						self.NovoAnexo.errors.showAllMessages(false);
						showHide(self.Anexos().length);
					} else {
						//alert("Algum erro ocorreu");
					}
				},
				cache: false,
				contentType: false,
				processData: false
			});
		};
		
		self.Baixar = function(anexo) {
			$.fileDownload('@Url.Action("BaixarAnexoDeUmaAta")', {
				httpMethod: "POST",
				data: { codigoDaReuniao: @Model.CodigoDaReuniao, codigoDaAta: @Model.CodigoDaAta, codigoDoAnexo: anexo.Codigo }
			});
		};

		self.Excluir = function(anexo) {
			$.post('@Url.Action("ExcluirAnexoDeUmaAta")', { codigoDaReuniao: @Model.CodigoDaReuniao, codigoDaAta: @Model.CodigoDaAta, codigoDoAnexo: anexo.Codigo }, 
				function(resposta) {
					if(resposta.Sucesso) {
						showHide(self.Anexos().length);
						self.Anexos(ko.utils.arrayFilter(self.Anexos(), function(anexoItem) {
							return anexoItem.Codigo != resposta.Anexo.Codigo;
						}));
						showHide(self.Anexos().length);
					}else{
						//alert("Algum erro ocorreu!");
					}
				});
		};

		self.Salvar = function () {
			if (self.NovoAnexo.isValid()) {
				self.Enviar();
			} else {
				self.NovoAnexo.errors.showAllMessages(true);
			}
		};

		self.Fechar = function() {
			self.Parent.CancelarAdicaoDeAnexoNaAta();
		};
	}

	function AnexosTableView(data, parent) {
		var self = this;
		self.Parent = parent;
		self.Codigo = data.Codigo;
		self.Nome = ko.observable(data.Nome);
		self.Descricao = ko.observable(data.Descricao);
		self.DataDeUpload = ko.observable(data.DataDeUpload);

		self.Baixar = function(anexo) {
			self.Parent.Baixar(anexo);
		};
		
		self.Excluir = function(anexo) {
			self.Parent.Excluir(anexo);
		};
	}
		
	function AddEditAnexoAtaFactory(parent) {
		var view = new AddEditAnexoAtaViewModel(parent);
		ko.applyBindings(view, $("#DivAddEditAnexoAtaViewModel").get(0));
	}

</script>
