@using Integra.Web.Helpers
@model Integra.Web.Models.AdicionarAnexoReuniaoViewModel

<div id="DivAddEditAnexoReuniaoViewModel">
	<div class="modal">
		<div class="modal-header">
			<h4>Gerenciar Anexos</h4>
		</div>
		<div class="modal-body">
            @if (User.ToPessoa().Usuario.PertenceAoGrupo(ViewBag.GrupoIntegra))
            {
                <div class="row-fluid">
                    <div class="span12">
                        <form data-bind="submit: Salvar">
                            <div class="form-horizontal" data-bind="with: NovoAnexo">
                                <div class="control-group">
                                    <label class="control-label">Descrição</label>
                                    <div class="controls">
                                        <div class="row-fluid">
                                            <input type="text" data-bind="value: Descricao" />
                                            <span class="error-inline" data-bind="validationMessage: Descricao"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label class="control-label">Arquivo</label>
                                    <div class="controls">
                                        <div class="row-fluid">
                                            <input type="file" data-bind="file: Arquivo" />
                                            <span class="error-inline" data-bind="validationMessage: Arquivo"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-actions clearfix">
                                <div class="pull-right">
                                    <button type="submit" class="bbtnn bbtnn-success"><i class='icon-plus'></i>Adicionar</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            }
			<div class="row-fluid">
				<div class="span12">
					<table id="gridAnexo" data-bind="dataTable:
															{
																dataSource: Anexos,
																rowTemplate: 'gridAnexoTemplate',
																sPaginationType: 'bootstrap',
																iDisplayLength: 2,
																gridId: 'gridAnexo',
																sDom: 'fptr',
																autoWidth: false,
																columns:
																	[
																		{ 'name': 'Descricao' },
																		{ 'name': 'DataDeUpload' }
																	],
																options: {
																	oLanguage: {
																		sUrl: '@Url.Content("~/Content/table-lang-br.txt")    '
															}
														}
														}"
						class="table table-striped table-bordered table-hover">
						<thead>
							<tr>
								<th>Descrição</th>
								<th>Enviado</th>
								<th id="filterTableAnexo"></th>
							</tr>
						</thead>
						<tbody>
						</tbody>
					</table>
				</div>
			</div>
		</div>
		<div class="modal-footer">
			<button data-bind="click: Fechar" class="bbtnn bbtnn-gray" value="Fechar">Fechar</button>
		</div>
	</div>
</div>

<script id="gridAnexoTemplate" type="text/html">
    <td data-bind="text: Descricao"></td>
    <td data-bind="date: DataDeUpload"></td>

    <td id="resultTableAnexo" style="text-align: center; width: 20px;">
        <div class='hidden-phone visible-desktop btn-group'>
            <button data-bind="click: Baixar" class='btn btn-mini btn-info tooltip-info' data-rel="tooltip" title="Baixar" data-placement="left"><i class='icon-download-alt'></i></button>
            @if (User.ToPessoa().Usuario.PertenceAoGrupo(ViewBag.GrupoIntegra))
            {
                <button data-bind="click: Excluir" class='btn btn-mini btn-danger tooltip-info' data-rel="tooltip" title="Excluir" data-placement="left"><i class='icon-trash'></i></button>
            }
                </div>
	</td>
</script>

<script>
	function AdicionarAnexoNaReuniaoFactory(parent) {
		var view = new AdicionarAnexoNaReuniaoViewModel(parent);
		view.Carregar();
		ko.applyBindings(view, $("#DivAddEditAnexoReuniaoViewModel").get(0));
	}
	
	function showHide(indices) {
		if(indices>0) {
			$("#filterTableAnexo").show();
			$("#resultTableAnexo").show();
		}else {
			$("#filterTableAnexo").hide();
			$("#resultTableAnexo").hide();
		}
	}

	function AdicionarAnexoNaReuniaoViewModel(parent) {
		var self = this;
		self.Parent = parent;
		var novoAnexo = new NovoAnexoReuniaoViewModel();
		self.NovoAnexo = ko.validatedObservable(novoAnexo);

		self.Carregar = function() {
			var allData = @Html.Raw(Json.Encode(Model.Anexos));
			var mappedData = jQuery.map(allData, function (item) { return new AnexoReuniaoViewModel(item, self); });
			self.Anexos = ko.observableArray(mappedData);

			showHide(self.Anexos().length);
		};

		self.Retorno = function(retorno) {
			if (retorno.Sucesso) {
				self.Anexos.push(new AnexoReuniaoViewModel(retorno.Anexo, self));
				self.NovoAnexo().Limpar();
				self.NovoAnexo.errors.showAllMessages(false);
			}
			showHide(self.Anexos().length);
		};

		self.Enviar = function() {
			$.ajax({
				url: '@Url.Action("AddEditAnexoReuniao")',
				type: 'POST',
				data: self.NovoAnexo().ToFormData(),
				async: false,
				success: self.Retorno,
				cache: false,
				contentType: false,
				processData: false
			});
		};
		self.Excluir = function(anexo) {
			$.post('@Url.Action("ExcluirAnexoReuniao")',{codigoDoAnexo : anexo.Codigo, codigoDaReuniao:  @Model.CodigoDaReuniao }, function(retorno) {
				if(retorno.Sucesso) {
					self.Anexos(ko.utils.arrayFilter(self.Anexos(), function(item) {
						return item.Codigo != retorno.CodigoDoAnexo;
					}));
					showHide(self.Anexos().length);
				}else {
				}
			});
		};
		self.Salvar = function () {
			if(self.NovoAnexo.isValid()) {
				self.Enviar();
			}else {
				self.NovoAnexo.errors.showAllMessages(true);
			}
		};        

		self.Baixar = function(anexo) {
			$.fileDownload('@Url.Action("BaixarArquivo")', { httpMethod: "POST", data: { codigoDaReuniao:  @Model.CodigoDaReuniao, codigoDoAnexo: anexo.Codigo }});
	};

	self.Fechar = function() {
		self.Parent.FecharAdicionarAnexoParaReuniao();
	};
	}

	function NovoAnexoReuniaoViewModel() {
		var self = this;
		self.Descricao = ko.observable().extend({ required: true });;
		self.Arquivo = ko.observable().extend({ required: true });;
		
		self.ToFormData = function() {
			var formData = new window.FormData();
			formData.append('Arquivo', self.Arquivo());
			formData.append('Descricao', self.Descricao());
			formData.append('CodigoDaReuniao', @Model.CodigoDaReuniao);
			return formData;
		};
		
		self.Limpar = function() {
			self.Codigo = 0;
			self.Descricao(null);
			self.Arquivo(null);
		};
	}

	function AnexoReuniaoViewModel(data, parent) {
		var self = this;
		self.Parent = parent;
		self.Codigo = data.Codigo;
		self.Descricao = ko.observable(data.Descricao);
		self.DataDeUpload = ko.observable(data.DataDeUpload);
			
		self.Baixar = function(anexo) {
			self.Parent.Baixar(anexo);
		};

		self.Excluir = function(anexo) {
			self.Parent.Excluir(anexo);
		};
	}
</script>
