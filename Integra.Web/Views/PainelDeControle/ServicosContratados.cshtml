@model  IList<Integra.Web.Models.ServicosContratadosViewModel>
@using Integra.Web.Helpers
@{
	ViewBag.Title = ": Painel de Controle Íntegra Medical : Dados do Projeto : Serviços Contratados :";
	Layout = "~/Views/Shared/_LayoutMaster.module.cshtml";
}

@Scripts.Render("~/dataTables")

<div class="container-fluid" id="main-container" style="padding-top: 10px;">
	<div id="main-content" class="clearfix">
		<div id="page-content" class="clearfix">
			<div class="page-header position-relative">
				<h3>Serviços Contratados <small></small></h3>
			</div>
			<div class="row-fluid">
				<!-- PAGE CONTENT BEGINS HERE -->
				<div class="row-fluid">
					<div class="span12">
						<div id="DivPageServicosContratadosViewModel">
							<table id="gridServicosContratados" data-bind="dataTable:
															{
																dataSource: ServicosContratados,
																rowTemplate: 'gridServicosContratadosTemplate',
																sPaginationType: 'bootstrap',
																iDisplayLength: 10,
																gridId: 'gridServicosContratados',
																sDom: 'fptr',
																autoWidth: false,
																columns:
																	[
																		{ 'name': 'DataContratacao' },
																		{ 'name': 'Nome' },
																		{ 'name': 'Descricao' },
																		{ 'name': 'Quantidade' },
																		{ 'name': 'Observacoes' }
																	],
																options: {
																	oLanguage: {
																	    sUrl: '@Url.Content("~/Content/table-lang-br.txt")'
																	}
																}
															}"
								class="table table-striped table-bordered table-hover">
								<thead>
									<tr>
										<th>Data Contratação</th>
										<th>Serviço</th>
										<th>Descrição</th>
										<th>Quantidade</th>
										<th>Observações</th>
										@if (User.ToPessoa().Usuario.PertenceAoGrupo(ViewBag.GrupoIntegra))
										{ 
											<th id="filterTableServicosContratados"></th>
										}
									</tr>
								</thead>
								<tbody>
								</tbody>
							</table>
							<div class="form-actions">
								@if (User.ToPessoa().Usuario.PertenceAoGrupo(ViewBag.GrupoIntegra))
								{
									<button data-bind="click: AdicionarServicoContratado" class="bbtnn bbtnn-info"><i class="icon-ok"></i>Adicionar</button>
								}
								<button data-bind="visible: ServicosContratados().length, click: generate_excel" class="bbtnn bbtnn-gray"><i class="icon-file"></i>Exportar</button>
							</div>
							<div style="display:none;" data-bind="dialog: { isOpen: NovoServicoContratadoDialog, modal: true, title: '', width: '0px', height: '0px' }">
								<div data-bind="html: NovoServicoContratadoHtml"></div>
							</div>
							<div style="display:none;" data-bind="dialog: { isOpen: ExcluirServicoContratadoDialog, modal: true, title: '', width: '0px', height: '0px' }">
								<div class="modal">
									<div class="modal-header">
										<h4>Remover Serviço</h4>
									</div>
									<div class="modal-body">
										<div data-bind="with: ServicoContratadoSendoExcluido">
											Você deseja remover este Serviço?
										</div>
									</div>
									<div class="modal-footer">
										<button data-bind="click: CancelarExclucao" class="bbtnn bbtnn-gray" value="Não">Não</button>
										<button data-bind="click: EfetivarExclucao" class="bbtnn bbtnn-danger" value="Sim"><i class="icon-ok"></i>Sim</button>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
@Html.Partial("_LayoutFooter")

<script id="gridServicosContratadosTemplate" type="text/html">
	<td data-bind="dateExtension: DataContratacao" style="width: 135px;"></td>
	<td data-bind="text: Nome" style="width: 160px;"></td>
	<td data-bind="text: Descricao" style="width: 200px;"></td>
	<td data-bind="text: Quantidade" style="width: 95px;text-align: center;"></td>
	<td data-bind="text: Observacoes"></td>
	@if (User.ToPessoa().Usuario.PertenceAoGrupo(ViewBag.GrupoIntegra))
	{
		<td id="resultTableServicosContratados" style="text-align: center; width: 40px;">
			<div class='hidden-phone visible-desktop btn-group'>
				<button data-bind="click: $root.Editar" class='btn btn-mini btn-info tooltip-info' data-rel="tooltip" title="Editar" data-placement="left"><i class='icon-edit'></i></button>
				<button data-bind="click: $root.Excluir" class='btn btn-mini btn-danger tooltip-info' data-rel="tooltip" title="Excluir" data-placement="left"><i class='icon-trash'></i></button>
			</div>
		</td>
	}
</script>

<script type="text/javascript" language="javascript">
	$(document).ready(function () {
		var view = new ServicosContratadosViewModel();
		ko.applyBindingsWithValidation(ko.validatedObservable(view), $("#DivPageServicosContratadosViewModel").get(0));
		
		$(".ui-dialog-titlebar").hide();
		$(".ui-dialog-buttonpane").hide();
	});
	
	function ServicosContratadosTableView(data, parent) {
		var self = this;
		self.Parent = parent;
		self.Codigo = ko.observable(data.Codigo);
		self.Nome = ko.observable(data.Nome);
		self.Descricao = ko.observable(data.Descricao);
		self.Quantidade = ko.observable(data.Quantidade);
		self.Observacoes = ko.observable(data.Observacoes);
		self.DataContratacao = ko.observable(data.DataContratacao);

		self.Editar = function(servicoContratado) {
			self.Parent.Editar(servicoContratado);            
		};

		self.Excluir = function(servicoContratado) {
			self.Parent.ExibirMensagemDeExcluir(servicoContratado);            
		};
	}

	function ServicosContratadosViewModel() {
		var self = this;
		
		self.ServicoContratadoSendoEditado = null;
		self.NovoServicoContratadoDialog = ko.observable(false);
		self.ExcluirServicoContratadoDialog = ko.observable(false);
		self.NovoServicoContratadoHtml = ko.observable();
		self.ServicoContratadoSendoExcluido = ko.observable(null);

		var allData = @Html.Raw(Json.Encode(Model));
		var mappedData = jQuery.map(allData, function (item) { return new ServicosContratadosTableView(item, self); });
		self.ServicosContratados = ko.observableArray(mappedData);
		
		arrumarLayout(self.ServicosContratados().length);

		self.AdicionarServicoContratado = function () {
			self.NovoServicoContratadoHtml(null);
			$.get('@Url.Action("AddEditServicoContratado", "PainelDeControle")', null, function (html) {
				self.NovoServicoContratadoHtml(html);
				new window.NovoServicoContratadoFactory(self);
				self.NovoServicoContratadoDialog(true);
			});
		};
		
		self.Editar = function(servicoContratado) {
			self.NovoServicoContratadoHtml(null);
			self.ServicosContratados(
				ko.utils.arrayFilter(self.ServicosContratados(), function(ser) {
					return ser.Codigo != servicoContratado.Codigo;
				})
			);
			self.ServicoContratadoSendoEditado = servicoContratado;
			$.get('@Url.Action("AddEditServicoContratado", "PainelDeControle")', {codigo: servicoContratado.Codigo() }, function (html) {
				self.NovoServicoContratadoHtml(html);
				new window.NovoServicoContratadoFactory(self);
				self.NovoServicoContratadoDialog(true);
			});
			arrumarLayout(self.ServicosContratados().length);
		};
		
		self.EfetivarExclucao = function() {
			$.post('@Url.Action("ExcluirServicoContratado", "PainelDeControle")', { codigo: self.ServicoContratadoSendoExcluido().Codigo }, function(resposta) {
				if (resposta.Sucesso) {
					//alert("Serviço excluida com sucesso.");
					self.ServicosContratados(
			   ko.utils.arrayFilter(self.ServicosContratados(), function(ser) {
				   return ser.Codigo != self.ServicoContratadoSendoExcluido().Codigo; }));
					self.ServicoContratadoSendoExcluido(null);
					self.ExcluirServicoContratadoDialog(false);
					arrumarLayout(self.ServicosContratados().length);
				} else {
					//alert("Algum Erro ocorreu durante a exclução desse Serviço!");
				}
			});
		};

		self.FecharCadastroDeServicoContratadoCancelar = function() {
			if(self.ServicoContratadoSendoEditado != null)
				self.ServicosContratados.push(self.ServicoContratadoSendoEditado);            
			self.NovoServicoContratadoDialog(false);
			arrumarLayout(self.ServicosContratados().length);
		};
		
		self.FecharCadastroDeServicoContratado = function (servicoContratado) {
			self.ServicoContratadoSendoEditado = null;
			self.ServicosContratados.push(new ServicosContratadosTableView(servicoContratado, self));
			self.NovoServicoContratadoDialog(false);
			arrumarLayout(self.ServicosContratados().length);
		};
		
		self.CancelarExclucao = function() {
			self.ExcluirServicoContratadoDialog(false);
			self.ServicoContratadoSendoExcluido(null);
		};

		self.ExibirMensagemDeExcluir = function(servicoContratado) {
			self.ExcluirServicoContratadoDialog(true);
			self.ServicoContratadoSendoExcluido(servicoContratado);
		};
		
		self.FecharDialogCadastroDeServicoContratado = function () {
			self.NovoServicoContratadoDialog(false);
		};
	    
		self.generate_excel = function () {
		    export_excel("gridServicosContratados");
		};                    
	}
	
	function arrumarLayout(indices) {
		if(indices>0) {
			$("#filterTableServicosContratados").show();
			$("#resultTableServicosContratados").show();
		}else {
			$("#filterTableServicosContratados").hide();
			$("#resultTableServicosContratados").hide();
		}
	}
	
	function export_excel(tableid) {
	    var table= document.getElementById(tableid);
	    var html = table.outerHTML;
	    window.open('data:application/vnd.ms-excel;base64,' + base64_encode(html));
	}

	function base64_encode (data) {
	    var b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
	    var o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, enc = "", tmp_arr = [];

	    if (!data) {
	        return data;
	    }

	    do {
	        o1 = data.charCodeAt(i++);
	        o2 = data.charCodeAt(i++);
	        o3 = data.charCodeAt(i++);
	        bits = o1 << 16 | o2 << 8 | o3;
	        h1 = bits >> 18 & 0x3f;
	        h2 = bits >> 12 & 0x3f;
	        h3 = bits >> 6 & 0x3f;
	        h4 = bits & 0x3f;
	        tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);
	    } while (i < data.length);
	    enc = tmp_arr.join('');
	    var r = data.length % 3;
	    return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);
	}
</script>
