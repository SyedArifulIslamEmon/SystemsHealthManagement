@using Integra.Web.Helpers
@model IList<Integra.Web.Models.SolicitacaoViewModel>
@{
	ViewBag.Title = ": Painel de Controle Íntegra Medical : Atendimento : Abertura de Chamados :";
	Layout = "~/Views/Shared/_LayoutMaster.module.cshtml";
}

@Scripts.Render("~/dataTables")

<div class="container-fluid" id="main-container" style="padding-top: 10px;">
	<div id="main-content" class="clearfix">
		<div id="page-content" class="clearfix">
			<div class="page-header position-relative">
				<h3>Abertura de Chamados <small></small></h3>
			</div>
			<div class="row-fluid">
				<div class="row-fluid">
					<div class="span12">
						<div id="DivViewModelSolicitacoes">
							<table id="gridSolicitacoes" data-bind="dataTable:{
	dataSource: Solicitacoes,
	rowTemplate: 'gridSolicitacoesTemplate',
	sPaginationType: 'bootstrap',
	iDisplayLength: 10,
	gridId: 'gridSolicitacoes',
	autoWidth: false,
	sDom: 'fptr',
	columns:
	[
		{ 'name': 'Protocolo' },
		{ 'name': 'Solicitante' },
		{ 'name': 'Tipo' },
		{ 'name': 'Protocolo' },
		{ 'name': 'DataDeAbertura' },
		{ 'name': 'Situacao' }
	],
	options: {
		oLanguage: {
			sUrl: '@Url.Content("~/Content/table-lang-br.txt")    '
	}
}
}"
								   class="table table-striped table-bordered table-hover">
								<thead>
									<tr>
										<th>Protocolo</th>
										<th>Solicitante</th>
										<th>Tipo</th>
										<th>Data Solicitação</th>
										<th>Situação</th>
										<th id="filterTableSolicitacoes"></th>
									</tr>
								</thead>
								<tbody>
								</tbody>
							</table>
							<div class="form-actions">

								<button data-bind="click: Adicionar" class="bbtnn bbtnn-info"><i class="icon-ok icon-white"></i>Adicionar</button>

							</div>
							<div style="display: none;" data-bind="dialog: { isOpen: NovaSolicitacaoDialog, modal: true, title: '', width: '0px', height: '0px' }">
								<div data-bind="html: NovaSolicitacaoHtml"></div>
							</div>
							<div style="display: none;" data-bind="dialog: { isOpen: ExcluirSolicitacaoDialog, modal: true, title: '', width: '0px', height: '0px'}">
								<div class="modal">
									<div class="modal-header">
										<h4>Remover Solicitação de Chamado</h4>
									</div>
									<div class="modal-body">
										<div data-bind="with: SolicitacaoSendoExcluido">
											Você deseja remover esta Solicitação de Chamado?
										</div>
									</div>
									<div class="modal-footer">
										<button data-bind="click: CancelarExclucaoSolicitacao" class="bbtnn bbtnn-gray" value="Não">Não</button>
										<button data-bind="click: EfetivarExclucaoSolicitacao" class="bbtnn bbtnn-danger" value="Sim"><i class="icon-ok"></i>Sim</button>
									</div>
								</div>
							</div>
						</div>
						<input id="ViewModel" type="hidden" value="@Html.Raw(Json.Encode(Model))"/>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
@Html.Partial("_LayoutFooter")

<script id="gridSolicitacoesTemplate" type="text/html">
	<td data-bind="text: Protocolo"></td>
	<td data-bind="text: Solicitante"></td>
	<td data-bind="text: Tipo"></td>
	<td data-bind="date: DataDeAbertura" style="text-align: center; width: 130px;"></td>
	<td class='hidden-480' style="text-align: center; width: 100px;"><span class="" data-bind="text: Situacao, attr: { 'class': applyCssStyle}"></span></td>

	<td id="resultTableSolicitacoes" style="text-align: center; width: 20px;">
		<div class='hidden-phone visible-desktop btn-group'>
			@if (User.ToPessoa().Usuario.PertenceAoGrupo(ViewBag.GrupoIntegra))
			{
				<button data-bind="click: Ver, visible: checkStepIntegra" class='btn btn-mini btn-info tooltip-info' data-rel="tooltip" title="Prosseguir" data-placement="left"><i class='icon-edit'></i></button>
			}
			@if (!User.ToPessoa().Usuario.PertenceAoGrupo(ViewBag.GrupoIntegra))
			{
				<button data-bind="click: Ver, visible: checkStepCliente" class='btn btn-mini btn-info tooltip-info' data-rel="tooltip" title="Prosseguir" data-placement="left"><i class='icon-edit'></i></button>
			}
				<button data-bind="click: Resumo" class='btn btn-mini btn-grey tooltip-info' data-rel="tooltip" title="Visão Geral" data-placement="left"><i class='icon-list-alt'></i></button>
			@if (User.ToPessoa().Usuario.PertenceAoGrupo(ViewBag.GrupoIntegra))
			{
				<button data-bind="click: Excluir" class='btn btn-mini btn-danger tooltip-info' data-rel="tooltip" title="Excluir" data-placement="left"><i class='icon-trash'></i></button>
			}
		</div>
	</td>

</script>

<script>
	function SolicitacaoViewModel(item, parent) {
		var self = this;
		self.Parent = parent;
		self.Codigo = item.Codigo;
		self.Protocolo = item.Protocolo;
		self.SolicitacoCodigo = item.SolicitacaoCodigo;
		self.DataDeAbertura = ko.observable(item.DataDeAbertura);
		self.Tipo = ko.observable(item.Tipo);
		self.Solicitante = ko.observable(item.Solicitante);
		self.Situacao = item.Situacao;
		
		self.Ver = function () {
			self.Parent.Ver(self);
		};
		
		self.Excluir = function () {
			self.Parent.ExcluirChamadoOnline(self);    
		};

		self.Resumo = function () {
			self.Parent.Resumo(self);
		};
		
		self.applyCssStyle = ko.computed(function () {
			if (self.Situacao == "Em Análise")
				return "label label-success";
			else if (self.Situacao == "Para Aprovação")
				return "label label-success";
			else if (self.Situacao == "Em Processo")
				return "label label-success";
			else if (self.Situacao == "Entregue")
				return "label label-success";
			else if (self.Situacao == "Finalizado")
				return "label label-success";
			else if (self.Situacao == "Cancelado")
				return "label label-success";
			else
				return "label label-info";
		});

		self.checkStepCliente = ko.computed(function() {
		    if(self.Situacao == "Para Aprovação" || self.Situacao == "Entregue") {
		        return true;
		    }
		    return false;
		});
	    
		self.checkStepIntegra = ko.computed(function() {
		    if(self.Situacao == "Em Análise" || self.Situacao == "Em Processo") {
		        return true;
		    }
		    return false;
		});
	}

	function SolicitacoesViewModel() {
		var self = this;
		self.Model = jQuery.parseJSON($("#ViewModel").val());
		self.SolicitacaoSendoEditada = null;
		self.NovaSolicitacaoHtml = ko.observable(null);
		self.NovaSolicitacaoDialog = ko.observable(false);
		
		self.ExcluirSolicitacaoDialog = ko.observable(false);
		self.SolicitacaoSendoExcluido = ko.observable();

		self.Solicitacoes = ko.observableArray(ko.utils.arrayMap(self.Model, function (item) {
			return new SolicitacaoViewModel(item, self);
		}));
		
		arrumarLayout(self.Solicitacoes().length);

		self.Adicionar = function () {
			self.NovaSolicitacaoHtml(null);
			$.get('@Url.Action("AddSolicitacao")', null, function (html) {
				self.NovaSolicitacaoHtml(html);
				new window.AddEditSolicitacaoFactory(self);
				self.NovaSolicitacaoDialog(true);
				arrumarLayout(self.Solicitacoes().length);
			});
		};

		self.Ver = function (solicitacao) {
			self.NovaSolicitacaoHtml(null);
			$.get('@Url.Action("VisualizarSolicitacao")', { id: solicitacao.Codigo }, function (html) {
				self.NovaSolicitacaoHtml(html);
				new window.VisualizarSolicitacaoFactory(self);
				self.NovaSolicitacaoDialog(true);
				self.Solicitacoes(ko.utils.arrayFilter(self.Solicitacoes(), function (solicitacaoItem) {
					return solicitacaoItem.Codigo != solicitacao.Codigo;
				}));
				self.SolicitacaoSendoEditada = solicitacao;
				arrumarLayout(self.Solicitacoes().length);
			});
		};

	    self.FecharResumoDeSolicitacao = function() {
	        self.NovaSolicitacaoHtml(null);
	        self.NovaSolicitacaoDialog(false);
	    };

		self.Resumo = function (solicitacao) {
			self.NovaSolicitacaoHtml(null);
			$.get('@Url.Action("ResumoSolicitacao")', { id: solicitacao.Codigo }, function (html) {
			    self.NovaSolicitacaoHtml(html);
			    new window.ResumoSolicitacaoFactory(self);
				self.NovaSolicitacaoDialog(true);
				arrumarLayout(self.Solicitacoes().length);
			});
		};

		self.ExcluirChamadoOnline = function(solicitacao) {
			self.ExcluirSolicitacaoDialog(true);
			self.SolicitacaoSendoExcluido(solicitacao);
		};
		
		self.EfetivarExclucaoSolicitacao = function() {
			$.post('@Url.Action("ExcluirSolicitacao", "PainelDeControle")', { codigo: self.SolicitacaoSendoExcluido().Codigo }, function(resposta) {
				if (resposta.Sucesso) {
					//alert("Treinamento excluida com sucesso.");
					arrumarLayout(self.Solicitacoes().length);
					self.Solicitacoes(
			   ko.utils.arrayFilter(self.Solicitacoes(), function(ser) {
				   return ser.Codigo != self.SolicitacaoSendoExcluido().Codigo; }));
					arrumarLayout(self.Solicitacoes().length);
					self.ExcluirSolicitacaoDialog(false);
					self.SolicitacaoSendoExcluido(null);
					
				} else {
					//alert("Algum Erro ocorreu durante a exclução desse Treinamento!");
				}
			});
		};
		
		self.CancelarExclucaoSolicitacao = function() {
			self.ExcluirSolicitacaoDialog(false);
			self.SolicitacaoSendoExcluido(null);
		};

		self.FecharCadastro = function (solicitacao) {
			self.NovaSolicitacaoHtml(null);
			self.Solicitacoes.push(new SolicitacaoViewModel(solicitacao, self));
			self.NovaSolicitacaoDialog(false);
			arrumarLayout(self.Solicitacoes().length);
		};

		self.CancelarCadastro = function () {
			self.NovaSolicitacaoHtml(null);
			self.NovaSolicitacaoDialog(false);
			if(self.SolicitacaoSendoEditada != null)
			    self.Solicitacoes.push(self.SolicitacaoSendoEditada);
			
			arrumarLayout(self.Solicitacoes().length);
		};
	}

	$(document).ready(function () {
		var view = new SolicitacoesViewModel();
		ko.applyBindings(view, $("#DivViewModelSolicitacoes").get(0));
			
		$(".ui-dialog-titlebar").hide();
		$(".ui-dialog-buttonpane").hide();
	});
		

	function arrumarLayout(indices) {
		if(indices>0) {
			$("#filterTableSolicitacoes").show();
			$("#resultTableSolicitacoes").show();
		}else {
			$("#filterTableSolicitacoes").hide();
			$("#resultTableSolicitacoes").hide();
		}
	}
</script>
